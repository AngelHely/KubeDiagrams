---
# Source: elasticsearch/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: "elasticsearch-master-pdb"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: "elasticsearch-master"
---
# Source: elasticsearch/templates/secret-cert.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: elasticsearch-master-certs
  labels:
    app: elasticsearch-master
    chart: "elasticsearch"
    heritage: Helm
    release: elasticsearch
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURpRENDQW5DZ0F3SUJBZ0lSQU1pY2FvcWh6cXVzV2dlUmhvUHc2eUV3RFFZSktvWklodmNOQVFFTEJRQXcKR3pFWk1CY0dBMVVFQXhNUVpXeGhjM1JwWTNObFlYSmphQzFqWVRBZUZ3MHlOVEF5TURZeE5ESTVOVGxhRncweQpOakF5TURZeE5ESTVOVGxhTUI4eEhUQWJCZ05WQkFNVEZHVnNZWE4wYVdOelpXRnlZMmd0YldGemRHVnlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0VHJnYUpMSHpFYjFMd1U5c1lXNTR0VnMKNEJvc2JrRmxkRUdkVEF5STlORklrNG85SFVKRTRDdWV4S2VENFRDYnBLRTh3RThYQVZLZVZEcGo5YWVuYUpSawo5VFlDNGllMFhPV0cwcHEvd09JamR0NGRzbkRJR0FmUVRkek9VZDFhKy9CdDRPQ1ZPNjN6SmhCa1J3TUFNVFc0CnVXeW5nSHRvRk5UWFhRRGpiZWRUem9tWnNzcUJnOFNpWnpBOFRKQjArUXp1V21QczFXcjVDc0NGSmZSMm1FMVAKY05pZWtkVDkyV2o4VDF4bUlPdERZcTg0T1NzMFY5S2hHWkYxZ0QxV05ZbU85MElUY3czampHekdCNUtYNmFGagova01ZeHFsZU1CRmdnV3ZQNU8zaTh4OVIrNFZ6YlZNSEVFWkRHbUpiM2tNM3BLOC9xV2JmVVA1RlFhNHhRd0lECkFRQUJvNEhDTUlHL01BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlFrVVVhK0pDdk5BcTJwak81dQpyLzRiYlBjZmVUQmZCZ05WSFJFRVdEQldnaFJsYkdGemRHbGpjMlZoY21Ob0xXMWhjM1JsY29JY1pXeGhjM1JwClkzTmxZWEpqYUMxdFlYTjBaWEl1WkdWbVlYVnNkSUlnWld4aGMzUnBZM05sWVhKamFDMXRZWE4wWlhJdVpHVm0KWVhWc2RDNXpkbU13RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUhONTZhallaM3BGWVo4Z1pSTmw2cWpsc3Q4RApoYTE2bXdRSXhTV2ZsOENoUlNKR3Bod2lHZnF4SEhmaERxRmVLYWdCR3RqVmdNMXNtdU5IbnRYenpYTVVPRlBpCm5RVVJwZXdKTDlBMTk3dlFVOXQ0MDh1TjVCZktZeCtOQVNKTWlGVHBzSitiaGxKcG4xc0FNVXdCb09TZHpyZm8KVGhKVVg0TTFnQTk1VUpTM2tWTlVTVGlEajV1N1JOTks4TmRNaEV0aHRtWkI3REFzUDVCWERheEZCUzA5ck9Legp6VGNobnArQVBjckNMMkdNU0pUemdoRlNGYXBIQ3RVdUlKem5kR3NxWjFpQTQ5dlVmOWNxMzQzTWRFcjhpM04yCjlIL0ptUjFGL3VVdVZ6cHRKTFEzVmFYdDF3QmZJalBnUURWR2JqZU5UMHlybzFud1QySE5sL2RPaUhRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNFRyZ2FKTEh6RWIxTHdVOXNZVzU0dFZzNEJvc2JrRmxkRUdkVEF5STlORklrNG85CkhVSkU0Q3VleEtlRDRUQ2JwS0U4d0U4WEFWS2VWRHBqOWFlbmFKUms5VFlDNGllMFhPV0cwcHEvd09JamR0NGQKc25ESUdBZlFUZHpPVWQxYSsvQnQ0T0NWTzYzekpoQmtSd01BTVRXNHVXeW5nSHRvRk5UWFhRRGpiZWRUem9tWgpzc3FCZzhTaVp6QThUSkIwK1F6dVdtUHMxV3I1Q3NDRkpmUjJtRTFQY05pZWtkVDkyV2o4VDF4bUlPdERZcTg0Ck9TczBWOUtoR1pGMWdEMVdOWW1POTBJVGN3M2pqR3pHQjVLWDZhRmova01ZeHFsZU1CRmdnV3ZQNU8zaTh4OVIKKzRWemJWTUhFRVpER21KYjNrTTNwSzgvcVdiZlVQNUZRYTR4UXdJREFRQUJBb0lCQVFDa2E5blZIWW8wQzMwRQpGWHhqTXk5dmM4VG1tTlRrckdNSENydHRBQjJmTTRVYkNDanpTaVNEemZRNnRkdWxzbGw5UnFQVjlDYmtOVThXClNBWWZHSVF5NlZvR1ZLYW9PTG9Ic3h2SWRXWVV4a0dEamtUNXRqR3NzVStVOStPNmliRFpDVHo5bEpYOUdsRE4KOGR0eXA3TWxPWVdmLzcwTUk0cm80alJTVmNxeHVIWlEyY0l6WDlsVWRvNmM2ejd6L0VlOFFTK2diRFlYbkhLaQpTblpnUjZxQy9HQWNjdWMyVjRVZTU5dkUwSVcvQmRDOVFqMEJiSlBGdVViR3lHSFk2eGpoU0ppV0FoOFVncU5nCmNlV3E0NHUxQU1vY0FoSUVHM3ByOGMvMjI4NWhkUU90eG8vcEd2RExNclM4T0RSeVhDUW5jdHJ1Z3lxRFZsZzMKN2UvRzRocmhBb0dCQVB1bEt5Q05MVGZDa0RVcmplRTNQK0czZU9TZEJoSlE0MCtZNmJDYWJLdzBzdHBITDJtdQpsTGN1ZTdUS282Z3FiSmJoZnBGQU9jdEVGcmsxWVFnZ0c2RGtqdSs2Rlg3V0h0S3MyT0NmaHpWZWJJNkhpbEhUCmJXcUlpZXBLUzBnMWY2Q2svQlFieEFhTVk4SWJ6UFgrSGJSZ3B6a2w2MVY5aGw3cWxGQ2NvczVUQW9HQkFPVWcKcnluZVJYNUJZOWNNYTAvOEFRbGJZQVNTcVplR3RHKzE2QmxqNkVNTUFzTFBST3hOWkVURmJmN1ZubzZ5THR5dwpRdTlEbHVKTWM5MW5SZWhRajZCT2tZM0JLaTF5RHlKU2JUUWhDYW9FYlVqWVN4VzhJTzY5ZGdJQjlsLzI4VWRoCkFqNnBrdVVkMUc5dUtGRnZySUdBZmsrZUFoK1hhSGxZbjd1czRsTlJBb0dBWWxBUkhWS0tpL0pUYkxKclo4V3kKQzNrbW5ncEt5UFVaR1l2Z0lNTDBHZ01zck9LS3Yzc1pWc2V1Uk4rMk9JajZpNmZsVHRJTXdrRURyN0FQREtHZQpxYWtodnI2d2p6RVFNYmFkdElRZXl0YnRDbklocy80cURTankyTG5WMTR3dkpJL1FlL3F0QnZIcU4zZXRCNTRUCjlOaWQvRkc0TTFvckdRSUVsOG5hUVVrQ2dZQm5idzdEOXN3bVI3eWJhc2JTNzY5RUd4VElXN0RsYjNEcThSSmEKeStnZ3hENUcxU3lIQkJUY21zZWgvNnM1UGFTOENYSGQ4d1FkR21nL3JZdzRhSTI5ejFvVHhQeVdVV1FWbVdJawo0emtxb0I3NWdISzgyQldCME5PQjZvTGZKV29jVCtXa2hnYURHYWs1dUYvSkM0R3pZRjhrNys2RGRtVTZTbENwCmQwMGdVUUtCZ0hmOStMdSt6UEJMMUlibjBIQWhNRW1PT29KMDRWbHkzTXl6VFpxNDFoLzhucEp6cnpGODdJTE8KMU9YTG0vL2ZQRGRLV2VjR3hvVHZVc1RiRnA3ZVZqdWpLSFJibUVQN3lBVDJ3cTZ4YjV5VUp2RWF1K28xc3RmWAprYXNEVzRVU1N2R2lGeXNvNHFyVUlDUjVPNDAxZTlYVG42dFFHQ2d6L0cwQUladzNxNndaCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJakNDQWdxZ0F3SUJBZ0lSQU11eUlqeDJtbHlsSStTa1crR2lwaGd3RFFZSktvWklodmNOQVFFTEJRQXcKR3pFWk1CY0dBMVVFQXhNUVpXeGhjM1JwWTNObFlYSmphQzFqWVRBZUZ3MHlOVEF5TURZeE5ESTVOVGxhRncweQpOakF5TURZeE5ESTVOVGxhTUJzeEdUQVhCZ05WQkFNVEVHVnNZWE4wYVdOelpXRnlZMmd0WTJFd2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEa0JPNFJMS0laYnBaNjZqR2o1eGZUWDR4VWZobVYKU1JFeVBoL1JMUHQ4L3R6dkgyYUowREw5WXlXcUxuU1cxRWJFVVFKcThzOTRxNVF4RXRwT09RR0sxanA3cjdEZQovVDVpeHV5Q25MemRhY1I1c0l4ZFJaSXk0RCtPWEpqOVo5TEZKbmlHazdkeTk0T1Y0eXJDZHVqZEdVQmlKaS9TCjB6SmxCcXZycWZSQ3RmSjltcElheHZCa1czUmEySmQwWjNzRG1GVTJrbnV2TTJwZDVQVXNoTVUveDFqcm85WXQKaWtXMW0xRXhyTlpMcFV1VGxEZjJHNWY0UTVLWjNjSWtodDE5dXo0dW5xY0pNK2FyeGVhaFJvL1RzVnh2MkV6MgpsNm9WZW95LzJtRXhDeXl4NWg1TGV5S3dVT3hyWjdsNlg1VXpMc1pQRlRrUm10cHJOYmdiQVpnSEFnTUJBQUdqCllUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUgKQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUpGRkd2aVFyelFLdHFZenVicS8rRzJ6MwpIM2t3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUdqMmJCUEdBc2g2TElJUjllRjEwdmJqR1JzMEpOUGNlRFhoClladERSRElQNDlQUjZjWnJpWC8ycklGeW1mUkk4TFpvdTdXVXZHSGxaaVN4OXE4KzYySCt5WTBrZEowc1krdEYKdWV2dXFhTmloR0JaNHJpOTFBbmU5RzlWQlVTWk1PeU1FR1dxdkRXejRZUTBTVFk0UlNhVVczVmdqNkJ4M3UxKwpSbm9YOHhCRVdTcGxoSjFYVjRsNmdvYjBKY1R5NmVOZENxTElwYTZoRXZHbFQ3WFYvMEM0dTJxNnk0TWZFc25nClFEc09PNmxxeHZJWHVuZ3dzK1ZVVVJkdVZCREpKbkQxaytycWQ3dDJ0bEpnZ2tNTTlHVEw2TGVEb05RcUM1TjQKWi9xMFNIMVU1UmpCWWpUZGhKSmo5TGRBMHg2am1vT2Izdi81cXBNWi84OW5GR1ZxK213PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: elasticsearch/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-master-credentials
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
type: Opaque
data:
  username: ZWxhc3RpYw==
  password: "UjdvVU1rY2s2Y0F6eE9zZA=="
---
# Source: elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    {}
spec:
  type: ClusterIP
  selector:
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  publishNotReadyAddresses: false
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
# Source: elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master-headless
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app: "elasticsearch-master"
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
# Source: elasticsearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    esMajorVersion: "8"
spec:
  serviceName: elasticsearch-master-headless
  selector:
    matchLabels:
      app: "elasticsearch-master"
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-master
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
  template:
    metadata:
      name: "elasticsearch-master"
      labels:
        release: "elasticsearch"
        chart: "elasticsearch"
        app: "elasticsearch-master"
      annotations:
        
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "elasticsearch-master"
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
        - name: elasticsearch-certs
          secret:
           secretName: elasticsearch-master-certs
      enableServiceLinks: true
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        resources:
          {}

      containers:
      - name: "elasticsearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          exec:
            command:
              - bash
              - -c
              - |
                set -e

                # Exit if ELASTIC_PASSWORD in unset
                if [ -z "${ELASTIC_PASSWORD}" ]; then
                  echo "ELASTIC_PASSWORD variable is missing, exiting"
                  exit 1
                fi

                # If the node is starting up wait for the cluster to be ready (request params: "wait_for_status=green&timeout=1s" )
                # Once it has started only check that the node itself is responding
                START_FILE=/tmp/.es_start_file

                # Disable nss cache to avoid filling dentry cache when calling curl
                # This is required with Elasticsearch Docker using nss < 3.52
                export NSS_SDB_USE_CACHE=no

                http () {
                  local path="${1}"
                  local args="${2}"
                  set -- -XGET -s

                  if [ "$args" != "" ]; then
                    set -- "$@" $args
                  fi

                  set -- "$@" -u "elastic:${ELASTIC_PASSWORD}"

                  curl --output /dev/null -k "$@" "https://127.0.0.1:9200${path}"
                }

                if [ -f "${START_FILE}" ]; then
                  echo 'Elasticsearch is already running, lets check the node is healthy'
                  HTTP_CODE=$(http "/" "-w %{http_code}")
                  RC=$?
                  if [[ ${RC} -ne 0 ]]; then
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} https://127.0.0.1:9200/ failed with RC ${RC}"
                    exit ${RC}
                  fi
                  # ready if HTTP code 200, 503 is tolerable if ES version is 6.x
                  if [[ ${HTTP_CODE} == "200" ]]; then
                    exit 0
                  elif [[ ${HTTP_CODE} == "503" && "8" == "6" ]]; then
                    exit 0
                  else
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} https://127.0.0.1:9200/ failed with HTTP code ${HTTP_CODE}"
                    exit 1
                  fi

                else
                  echo 'Waiting for elasticsearch cluster to become ready (request params: "wait_for_status=green&timeout=1s" )'
                  if http "/_cluster/health?wait_for_status=green&timeout=1s" "--fail" ; then
                    touch ${START_FILE}
                    exit 0
                  else
                    echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                    exit 1
                  fi
                fi
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.initial_master_nodes
            value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2,"
          - name: node.roles
            value: "master,data,data_content,data_hot,data_warm,data_cold,ingest,ml,remote_cluster_client,transform,"
          - name: discovery.seed_hosts
            value: "elasticsearch-master-headless"
          - name: cluster.name
            value: "elasticsearch"
          - name: network.host
            value: "0.0.0.0"
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch-master-credentials
                key: password
          - name: xpack.security.enabled
            value: "true"
          - name: xpack.security.transport.ssl.enabled
            value: "true"
          - name: xpack.security.http.ssl.enabled
            value: "true"
          - name: xpack.security.transport.ssl.verification_mode
            value: "certificate"
          - name: xpack.security.transport.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.transport.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.transport.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
          - name: xpack.security.http.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.http.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.http.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
        volumeMounts:
          - name: "elasticsearch-master"
            mountPath: /usr/share/elasticsearch/data
          - name: elasticsearch-certs
            mountPath: /usr/share/elasticsearch/config/certs
            readOnly: true
---
# Source: elasticsearch/templates/test/test-elasticsearch-health.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "elasticsearch-kgwlp-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  containers:
  - name: "elasticsearch-abyik-test"
    env:
      - name: ELASTIC_PASSWORD
        valueFrom:
          secretKeyRef:
            name: elasticsearch-master-credentials
            key: password
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
    imagePullPolicy: "IfNotPresent"
    command:
      - "sh"
      - "-c"
      - |
        #!/usr/bin/env bash -e
        curl -XGET --fail --cacert /usr/share/elasticsearch/config/certs/tls.crt -u "elastic:${ELASTIC_PASSWORD}" https://'elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=1s'
    volumeMounts:
      - name: elasticsearch-certs
        mountPath: /usr/share/elasticsearch/config/certs
        readOnly: true
  restartPolicy: Never
  volumes:
    - name: elasticsearch-certs
      secret:
        secretName: elasticsearch-master-certs
