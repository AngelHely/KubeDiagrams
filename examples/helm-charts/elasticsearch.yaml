---
# Source: elasticsearch/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: "elasticsearch-master-pdb"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: "elasticsearch-master"
---
# Source: elasticsearch/templates/secret-cert.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: elasticsearch-master-certs
  labels:
    app: elasticsearch-master
    chart: "elasticsearch"
    heritage: Helm
    release: elasticsearch
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURpRENDQW5DZ0F3SUJBZ0lSQUs3MnNnSnpGSXlDWnZBeCtCY2ZZYWd3RFFZSktvWklodmNOQVFFTEJRQXcKR3pFWk1CY0dBMVVFQXhNUVpXeGhjM1JwWTNObFlYSmphQzFqWVRBZUZ3MHlOVEF5TWpjeE5UQTBOVFZhRncweQpOakF5TWpjeE5UQTBOVFZhTUI4eEhUQWJCZ05WQkFNVEZHVnNZWE4wYVdOelpXRnlZMmd0YldGemRHVnlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0ZkhTNHJXTmR0eHZMVElLd0VuYjNKd2YKT1JRdVNZQkYvOE9VS3h1NkZQWVZMdUloQnlLTDVOdmxDR2JzWkkwNzNtam83Tjhua3NJQ1dPekRqeVpWRUM5cQplNE4wV2pTU2FlTWdhOXhRQmlVaDNNV1YvV3A4TmxWa09aTUd5ekk5TlhTN2twRUhzUTBZRmNRQkxUY1FuQzk4Cm93Q0ltM3JGUEs5QkY4TWZIQ1hJR3hjMkFmRzR5YzJWRGl3VXlXUWV4WWdUTUExVzRwWGRlZHQ5clRFOENhUHcKcDlDWlN6OHorZU44UTA4NjU4YXY5ZzB0M3JCT3NOOXd4Y3krY084aVlkQmF5bUs2TUFEd2tGcDRaRzZ6d3IyRAprelFFNC9CTm5RVW5wdHdTOGV0MnpDM0FGcXQxS2d5ZUxnbGgrdDJNVVFDL1hQU0ZnL2ViSTg2NExnT0ZkUUlECkFRQUJvNEhDTUlHL01BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlF0cUgvQm1SZmZhc0RHOEJlbAo5YUVOeklFaVREQmZCZ05WSFJFRVdEQldnaFJsYkdGemRHbGpjMlZoY21Ob0xXMWhjM1JsY29JY1pXeGhjM1JwClkzTmxZWEpqYUMxdFlYTjBaWEl1WkdWbVlYVnNkSUlnWld4aGMzUnBZM05sWVhKamFDMXRZWE4wWlhJdVpHVm0KWVhWc2RDNXpkbU13RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUFrZ3R4L3JVeUx2NTJiS2VMZG9SazBscmZqYwpSYnByaFRXM095SHFRUVoreW9KMTNxT2ZPZG5DUXQ4cFZ5RndZakRiU2l4STJvZUtxM0RHdDdtVGhqSERaSitOCkQxNzhtNCtrc0YvYzJGdHJ3NWYraE9nZm12UytlY0dLTXA1S0pxdE9WQ1VldHZmdTdsRTlXemNpZ0ozOVk1Vm8KNEJlWUhRcEVHeXpEK1BHSytKemo3ZTdmd1hVQkxySVBuZWR4MFJ1Q2hOT1BmNUhVcFVNL0FRVldPRmNLK0dkRwpab1NOYW1uMkZrcElYMWdIUEMvakk2cHg0VFpNNWJ0SzFvU1FiMHZFZ1c4LzZkNVplV3Y4YmZIYythVEYvVFh6CndZY2c2WGRsTFIvWFZsUFYvN2RXZmU2cDlJZDd4cFlOMEhsTWpvY29Rd2pMQ1dqYTlZOXdLemhlWmxrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNGZIUzRyV05kdHh2TFRJS3dFbmIzSndmT1JRdVNZQkYvOE9VS3h1NkZQWVZMdUloCkJ5S0w1TnZsQ0dic1pJMDczbWpvN044bmtzSUNXT3pEanlaVkVDOXFlNE4wV2pTU2FlTWdhOXhRQmlVaDNNV1YKL1dwOE5sVmtPWk1HeXpJOU5YUzdrcEVIc1EwWUZjUUJMVGNRbkM5OG93Q0ltM3JGUEs5QkY4TWZIQ1hJR3hjMgpBZkc0eWMyVkRpd1V5V1FleFlnVE1BMVc0cFhkZWR0OXJURThDYVB3cDlDWlN6OHorZU44UTA4NjU4YXY5ZzB0CjNyQk9zTjl3eGN5K2NPOGlZZEJheW1LNk1BRHdrRnA0Wkc2endyMkRrelFFNC9CTm5RVW5wdHdTOGV0MnpDM0EKRnF0MUtneWVMZ2xoK3QyTVVRQy9YUFNGZy9lYkk4NjRMZ09GZFFJREFRQUJBb0lCQVFEWEJPdE1GTHFyZ3R2SwpodlQwU1ZXU2ZJQzZNUnBibUZjRkwzcXlDNURxb2NWRytLdTF2b3FqSVNDMC9qMjQ4eThtV1hCUSs0ME5mTlAvCkRGS095RXZyT3pSNmxuOEQyVVA4d01qNTNJL0xTVXNRYm5odTBnZWpMV0JUNmpkczZFS1h2SjlFdkFBMTNlQXQKMW5uSUxiOEE0N0FZNzBrUnJhUkdQQUlXT3ZwQUxXcGdDNHhFY3J6U1NyZkJiV1pZNjNtVGQyamswZXM2N0VrRAoyUHJ0VVVXdHdCRWhIck5rdHNoelJoQ0QwcGE3aE5RckJYUUp3N1ViMXh3aUpESG5EdFFzQlYwSm5tTjAyZVl0CmpiMXFYZVBUQlF4aDN5V0ZVM1BRVlZGRS9JVTNUNFZqV2RYRTdYVExvaGhvMytYYlBaL29ZYlVsU09UZWNoQjIKdWtOZXk1dUJBb0dCQVBpWFBZaHAvNXlkeW5pNklIUzNLdnFLUDE0K0ZOZU0rdW1sVkJTa3dwWnREaHUwOFE3bApvUW5xZFFKSHg1RkpxUk9PVyt4QUJYWVJXN1duMmg0UHliZGc5ZFdlbSt1c1NmamQ0YmhCcWJkMVBvVmFlNXViClJYcnZ0a2xKZVRYSFUwM0ZzRm9jbzJuYnU4Z1M1bFN0YzBFNjdleVFlT2k4QmgwWUNlUnF1d0t6QW9HQkFPaXQKeXNqNjJ4NWlYQi9USzZTQzJReVgwTXk4STRPZHdEMVIwLzMxRXVNV1VwWGxhUnhQNTBXYU5WTHVZZHMxdGdzUgpTbW5oc0gremo1WFhhV3BaUXg5ZUFjR3BYWXJLWkR6alFIenExWG95aUhQaDJlQUJYNWFBMzk4dEg5VjNldUlFCjZyV1VXbzZ2QnIwYXhrSkJsRmhUN3JabUNkSjVDaC8ydFh2SmhzczNBb0dCQVBPWldRMzlPU05qS0k2SGJkaVIKeVliN3hENzR2UG5BeC92L0s5YVM0YkFBcSt1UXN3dnpENHlrK1FaRUNwY2Z4SlJLVTErK0dOdnJCS0NOSEZ1TApBeE0wNjVIcXZFWUViZlIya1lNNnJUSCtyVWFHTlV4MXFtOWV5WlVsYjZhNGJiUnZmWEhBVUk0aWFmQVVQU3RMClVQN2gzVmFNK0Q2d1NabG0vZ0tjYUNlckFvR0FDVnk4MVJ0cTU2MFRnZUJRV0QwL21JY2ZTcTJqVEM5enhjUGUKSU5EVW9yaUtPQ2ZUOCtTdkxKakkzbjVqQjV3QXFDOVk3Q3U5bTFYUlNEa3pyNmpKejZCTHQ4d2x6R2phWWF6UApNbmVNZ1c4NUdGaVZHTE5WY2t2Yk5qS3RuanhCZ0lpc0hRUk1KSU9jWk0ySC9yQisxSk1EL3VqYUtsTGVlbXpGCjNxWThPejhDZ1lFQW1xOWUxNlo2ZFdGdmZ0K2dXbnVmTkhuVS9rMlU1Q2pqbkdKdE5zNHRqRm9NZlg0cDl4RGMKT0dmc0ZyTkxHK0VLZFE0d3FRU0tMR3dTaTU0d1dZeGIzVll0NEZPWFFwRTV1VmVHTkRsUStaVmkwRnpqZHZmVgpLMktQVkFQMHpVaUhXL2NITnZRQlhWLzNLQnhWQkFlRVlncHZvblUvbVBsMmNIemFEOFBOaTlRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lRWkVNMGdaaWFtL0hGVmpwSmpDYjkwakFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCbGJHRnpkR2xqYzJWaGNtTm9MV05oTUI0WERUSTFNREl5TnpFMU1EUTFOVm9YRFRJMgpNREl5TnpFMU1EUTFOVm93R3pFWk1CY0dBMVVFQXhNUVpXeGhjM1JwWTNObFlYSmphQzFqWVRDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1KWVdJc0tKMU5GTFZ6NXp3QjRyMi9TTVQzSmUvZ2sKWUJvSUNaMnAyOXB4N29Va1JOZ25hamd1dWU1aksxVjRabW85NHc2WjFneWF2bThGblErSER5dFgvUUZhM1JGbwpLdk9KZFRub0RUbXM5NzZFTHlzQlZrRW1HSllFTkNWRmpSUmc1ZWF4VmVSS0pnb2grRmhUWHhCaW1QVEkrNVZmClF4SXQrMEl2OXJDeGhyOWpob25YM0EzenZyRzhOMHZnOEEwV0QrSFM4WEhhTzNPcUdQTFAyMGtHbVQzcFgwTHMKbzJXTEFrSkNtOHo5STNuTkloaTc0QVpQUzdzbHhNVktCTTFvVWdHWGJhL1NRaHprck1XaFRhNm5yWENvdWxXSgp0U2xrblZBMFdPRGhvZ0E0bC9aR052Nlk1b0FjTWJtRzhWRWFIMXNlOGdLS3NTTXlTZlVOWTVrQ0F3RUFBYU5oCk1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLa01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRdHFIL0JtUmZmYXNERzhCZWw5YUVOeklFaQpUREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBWXdhOWFvdjRFV2U5MDNCWWFrc0hiM2pXMjdISHIxVHo0azVJCnJBbGh3Y3ZlTE4xcXFMcC9MV2FSVjMwejBhbEF5TzNDQkRiVTFqNkZ2NzZ2WVZqNU9wL3JCdFdwUnN3bTA2MGcKcVRPa2Vkc0VYY2N2S2ROZEh6M0o3T2VGZFpTbyszVkdxdExnTHJnWCsyZzhWVWxRNHhqaVNFTGJhd25IR1NzLwpuVndBaHgwZmI2bm1kRlltdFAxWmp3VHRUOVRtN29CR0tYOU1RQmh2R2dQcFcxUi9YVUk0MU82Sk14QjdFUlY0Ci9jc3RCbnhhQ3dpK05mQjJZcFFQM2wxZUQxQmp5bkFMZ2lSWlVUcUZKQjU2UUYwZTBtT01aaW5OSzdtNDhleCsKWTkvdS9PcmY3dEhOUUdrbmppTFgwYzdpaCtSd3dJZXhzZWI2dkUyRlJ3Q1FNOUpIcWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: elasticsearch/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-master-credentials
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
type: Opaque
data:
  username: ZWxhc3RpYw==
  password: "ZGNIWmtQakZIb3RnRUROYw=="
---
# Source: elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    {}
spec:
  type: ClusterIP
  selector:
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  publishNotReadyAddresses: false
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
# Source: elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master-headless
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app: "elasticsearch-master"
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
# Source: elasticsearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    esMajorVersion: "8"
spec:
  serviceName: elasticsearch-master-headless
  selector:
    matchLabels:
      app: "elasticsearch-master"
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-master
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
  template:
    metadata:
      name: "elasticsearch-master"
      labels:
        release: "elasticsearch"
        chart: "elasticsearch"
        app: "elasticsearch-master"
      annotations:
        
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "elasticsearch-master"
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
        - name: elasticsearch-certs
          secret:
           secretName: elasticsearch-master-certs
      enableServiceLinks: true
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        resources:
          {}

      containers:
      - name: "elasticsearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          exec:
            command:
              - bash
              - -c
              - |
                set -e

                # Exit if ELASTIC_PASSWORD in unset
                if [ -z "${ELASTIC_PASSWORD}" ]; then
                  echo "ELASTIC_PASSWORD variable is missing, exiting"
                  exit 1
                fi

                # If the node is starting up wait for the cluster to be ready (request params: "wait_for_status=green&timeout=1s" )
                # Once it has started only check that the node itself is responding
                START_FILE=/tmp/.es_start_file

                # Disable nss cache to avoid filling dentry cache when calling curl
                # This is required with Elasticsearch Docker using nss < 3.52
                export NSS_SDB_USE_CACHE=no

                http () {
                  local path="${1}"
                  local args="${2}"
                  set -- -XGET -s

                  if [ "$args" != "" ]; then
                    set -- "$@" $args
                  fi

                  set -- "$@" -u "elastic:${ELASTIC_PASSWORD}"

                  curl --output /dev/null -k "$@" "https://127.0.0.1:9200${path}"
                }

                if [ -f "${START_FILE}" ]; then
                  echo 'Elasticsearch is already running, lets check the node is healthy'
                  HTTP_CODE=$(http "/" "-w %{http_code}")
                  RC=$?
                  if [[ ${RC} -ne 0 ]]; then
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} https://127.0.0.1:9200/ failed with RC ${RC}"
                    exit ${RC}
                  fi
                  # ready if HTTP code 200, 503 is tolerable if ES version is 6.x
                  if [[ ${HTTP_CODE} == "200" ]]; then
                    exit 0
                  elif [[ ${HTTP_CODE} == "503" && "8" == "6" ]]; then
                    exit 0
                  else
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} https://127.0.0.1:9200/ failed with HTTP code ${HTTP_CODE}"
                    exit 1
                  fi

                else
                  echo 'Waiting for elasticsearch cluster to become ready (request params: "wait_for_status=green&timeout=1s" )'
                  if http "/_cluster/health?wait_for_status=green&timeout=1s" "--fail" ; then
                    touch ${START_FILE}
                    exit 0
                  else
                    echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                    exit 1
                  fi
                fi
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.initial_master_nodes
            value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2,"
          - name: node.roles
            value: "master,data,data_content,data_hot,data_warm,data_cold,ingest,ml,remote_cluster_client,transform,"
          - name: discovery.seed_hosts
            value: "elasticsearch-master-headless"
          - name: cluster.name
            value: "elasticsearch"
          - name: network.host
            value: "0.0.0.0"
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch-master-credentials
                key: password
          - name: xpack.security.enabled
            value: "true"
          - name: xpack.security.transport.ssl.enabled
            value: "true"
          - name: xpack.security.http.ssl.enabled
            value: "true"
          - name: xpack.security.transport.ssl.verification_mode
            value: "certificate"
          - name: xpack.security.transport.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.transport.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.transport.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
          - name: xpack.security.http.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.http.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.http.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
        volumeMounts:
          - name: "elasticsearch-master"
            mountPath: /usr/share/elasticsearch/data
          - name: elasticsearch-certs
            mountPath: /usr/share/elasticsearch/config/certs
            readOnly: true
---
# Source: elasticsearch/templates/test/test-elasticsearch-health.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "elasticsearch-iotpd-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  containers:
  - name: "elasticsearch-nfuvf-test"
    env:
      - name: ELASTIC_PASSWORD
        valueFrom:
          secretKeyRef:
            name: elasticsearch-master-credentials
            key: password
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
    imagePullPolicy: "IfNotPresent"
    command:
      - "sh"
      - "-c"
      - |
        #!/usr/bin/env bash -e
        curl -XGET --fail --cacert /usr/share/elasticsearch/config/certs/tls.crt -u "elastic:${ELASTIC_PASSWORD}" https://'elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=1s'
    volumeMounts:
      - name: elasticsearch-certs
        mountPath: /usr/share/elasticsearch/config/certs
        readOnly: true
  restartPolicy: Never
  volumes:
    - name: elasticsearch-certs
      secret:
        secretName: elasticsearch-master-certs
