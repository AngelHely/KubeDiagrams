---
# Source: elasticsearch/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: "elasticsearch-master-pdb"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: "elasticsearch-master"
---
# Source: elasticsearch/templates/secret-cert.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: elasticsearch-master-certs
  labels:
    app: elasticsearch-master
    chart: "elasticsearch"
    heritage: Helm
    release: elasticsearch
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURpRENDQW5DZ0F3SUJBZ0lSQU9kbTJOamhVVlFtWWZwS3ZacDN4Q1V3RFFZSktvWklodmNOQVFFTEJRQXcKR3pFWk1CY0dBMVVFQXhNUVpXeGhjM1JwWTNObFlYSmphQzFqWVRBZUZ3MHlOVEF4TWpFd09USTRNelZhRncweQpOakF4TWpFd09USTRNelZhTUI4eEhUQWJCZ05WQkFNVEZHVnNZWE4wYVdOelpXRnlZMmd0YldGemRHVnlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE1MVpJMjRGQXhPSkp5TXhzbjlPWnlQVjUKNE90SkFKeXlzd3dBY2FNd3FQdVprZGwzaFNvcVB4T1NRazFSMmEzZFA4WGJsOTBvT2o4VStLYWtUVzJzK3pRMQpwYVVWcHV6bGpxQ2M0VDEyQkFlc1dWR3JXbDJnMVVhKyt5MjU4akE5K0J3MU5oNEZrc2kwZmlwMy9hd2E4cWloCkUrTE5ERDJ6MjFUdmlHVEFudFBWOVhFVnlDMmRobXc0VysxKy9iYlQ3ZzJxUUR3Qjl5RHZ5ek10akRUSlZTQmwKV3RTTWFJRGlaWHY0UFNEeEJKckxwMTZOb0ZURUJCaGh3djNISXBSRk45dktKK3k4ZkI2aURya2ZSSWtDS0J2ZgpvaFBYT1VXTTB3Sm5yWUlmaWR4MmVVZWx1cm9EdmVQeGkyVUpOR2VDbWJmVHg2VnltNEQyZzAwLzJaVzhvd0lECkFRQUJvNEhDTUlHL01BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlRlYXpOalhYaHpTYXZuTzNwRAphUVovUzBSZUZUQmZCZ05WSFJFRVdEQldnaFJsYkdGemRHbGpjMlZoY21Ob0xXMWhjM1JsY29JY1pXeGhjM1JwClkzTmxZWEpqYUMxdFlYTjBaWEl1WkdWbVlYVnNkSUlnWld4aGMzUnBZM05sWVhKamFDMXRZWE4wWlhJdVpHVm0KWVhWc2RDNXpkbU13RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpwN2IzNzZlVmJiL2d2eml4bi94dm5XTTdHNgp2L0VwbTd5L1ZnL3d4TC9KR2I2anVUd0dkcitYM0Y0RndYalI3d3V4eVNMRkJsbkFhd3ZRdHFiOUUzUDFub0d5Cmd0M1hoR1dMbnF6cjZZeTUzWEpTZXlvNzBtMjFtcnExK2YvVm9xNnBUSnhuMkhpL3NNUTBOR1RtYkFhN09Pc3oKaGRqQzl4U08xRHpvckZhOFUvcFI5NkxjMHNaeGNsUU5NUjdNeVpqZnRINFpESE9XN2h2Z1NzR3V3ZHgyd3Mregp0YWovcGZ1Zkc1dnRLNHZ6dStQVktSSXo3eFlpaUFsWTZpVzhuaFZCa2ZNZlBrR1QvUVVTdmVIMEVCV1J2b3FoCnpwOWRiSnJVMldYc3lITU9LQVliZ2ZES3h3WEZ5U0dqYURYWmFWOW0wZ2tPZVVJeWRhU2Yxb045WVZNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNTFaSTI0RkF4T0pKeU14c245T1p5UFY1NE90SkFKeXlzd3dBY2FNd3FQdVprZGwzCmhTb3FQeE9TUWsxUjJhM2RQOFhibDkwb09qOFUrS2FrVFcycyt6UTFwYVVWcHV6bGpxQ2M0VDEyQkFlc1dWR3IKV2wyZzFVYSsreTI1OGpBOStCdzFOaDRGa3NpMGZpcDMvYXdhOHFpaEUrTE5ERDJ6MjFUdmlHVEFudFBWOVhFVgp5QzJkaG13NFcrMSsvYmJUN2cycVFEd0I5eUR2eXpNdGpEVEpWU0JsV3RTTWFJRGlaWHY0UFNEeEJKckxwMTZOCm9GVEVCQmhod3YzSElwUkZOOXZLSit5OGZCNmlEcmtmUklrQ0tCdmZvaFBYT1VXTTB3Sm5yWUlmaWR4MmVVZWwKdXJvRHZlUHhpMlVKTkdlQ21iZlR4NlZ5bTREMmcwMC8yWlc4b3dJREFRQUJBb0lCQVFER0x6eHhtSlMxVnl0Zwo5QWluRCs5eW95SkwxeVlPZVMvNmhmQ25hZWZaRE5ydWdVQ01lNmYvcTdPa1Mzc3dvbXVtSThwUm11eklvWnhFCnZQYUxRc2RyMmJtUDlCTE5rNnZCK2NVTWpjdlovZnpmOUVCNVJUYnhJQStqUGZSTUVKbzJRV3d3dFoyT3Q1VXgKZFE2ZzZ0MlhQM0huaUdpajhRUnhoWjFEMnhUTnV3b3FyckhCMmZUdUtLYTN4STlyQXJvMU5hVlRZbzhtREQzVgpiUmxENWpOZC9SWUpESjhUWVdEYlVRWithU25DWDBKNjkyMmE1MEFIT1NUandLUDVLVldULzlYc2p2WlZmZTNWClIrR0xibm5Od0RBdUJrSmwyb2kxSnppRjhJblRieWxadlkwVU9kWmxqRVZkazcwUGZvRnRJcThSTysrQ3dSTysKNXJZWWprdUJBb0dCQU93SFpqaHlXN0M0ZTA5dDlINUFyN2FKemVLenlib21sSmJpWWhqK0txcEpMVm5LTmVENgowRGFPWCt1c1FVRUtrQkRNWVJTazYvZm9FMHZWMVFqQ0Y4OFR5VHdGU2x1Wnp6VEZZZHJreEZVYVF5TU5EVlRDCkdHTk5peFBFSzlBbWNoQ0tMbFY2MEdweGpoY20vSjAvT3VtUTNmUzRyOEF3QUlxNFlyWEJ1S1hCQW9HQkFQcnAKUVdaMWRlWXU4SmRkZWhwcVkzYmpYaFc1SSs0YkdkQ1BYSjZzeUc4ajRGQnJUaS9xMjlxMjdzOHpWYTQ0QlZGOApjQW9rQkowVVVEV2dHRFVJYVQ1dUQwRWdRNGpEMVNHOHRiS1ovcHJjTTVVM3l2YXVRSjJVTDFaZVRndHA0c0p2CmZBL2g2cEFJQWFINDNtVDhLQzgzYkN1aUUzSHhsOGhFTll1VUZHTmpBb0dBSlowWVFTNllSaFZnTVV4SWhrWXcKdWxwRG9Ua2RrTGpOUFM1ZWk3VVZmNFdoNElsRkJORnpsUDRqY3g5RVZ1VWtDRWxKdjB4NC9relJwbWd4UnZBSApjMHluNlJTK3dOSkdIeGJGZldpdmtSQmFXcCtkM0VBQ092RUVsT1hTUloyYTE5L3RlbG5VRk9KN3pseThMU01DCmRHNU5zTTR0MCtiU2IwanJFaVFKRlFFQ2dZRUEzejBMUUNLL3pCWDFYMmIreldQY3JSbHNTejJYRnpFcmphRVAKMGVsK3gwdVBOMTNSaWRhVzE0aXMvdEw0cDNJV1lVS3EySXJsUS9DZjBLWnBBejVCalJjVklXZVlUcVdXQ2xkQQovZS8vVkQ4WThlbGEvcEZZMGhyVzV5d3VtZjhTanRYcjlxR1ZOYUs1K1NkWWoxYStWZ3draE1uR0xUbTdScVpSClVhZGxZR3NDZ1lFQXAzdDNldi9yQ0RDdmQ3Y0gyV21YY1laYVhMaXdPcWFIUzVBNWh4dmdWT09rWHZtMzIzaFIKaWo2UzhVYmVlNE95SHo3cXRQOU4xMWpRTnJwTUxmYWd6YkltQml2aE1MTzRRRFB3b3V4ZjdPK2pKSXZ6SmhuNwpleG9WeVJnTDNNRkNyL1d6TU1TbWRBc3BNUjdYSE1QM2d5L0RRQU8zR0dvbG80amRsM3hETC80PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lRWkRJOWQ0aEdidEcxNTJpdmZCM1pTekFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCbGJHRnpkR2xqYzJWaGNtTm9MV05oTUI0WERUSTFNREV5TVRBNU1qZ3pOVm9YRFRJMgpNREV5TVRBNU1qZ3pOVm93R3pFWk1CY0dBMVVFQXhNUVpXeGhjM1JwWTNObFlYSmphQzFqWVRDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1rSVVuYVFxTGtsZ2VEMXQwd1c1dllUT1JLMFppVWgKREVFQmRsT2hYNkp0cEl3ZWxHaDBLdldGbVM1QXZFcVlIcmRublBabUVlYWxSM0RtUGpBUmhRZXVRckVWN3NQZwo4S2Q2ckRBQXhoQU9OV1QxQ3FmZlM3NWVBRURVd2xKTUJrU1FjMzJBSXBJVkFhc0pFZHZMNDRTT0t6N2k5S0J6CjZPTEhSd0VHeU5qb0lrM0IySFhXUjFjRy9uVGZGRUJua3pJZlpzL0VSVWc3dWhDQzRWNWF6VDdWZFAvamRncHIKY0J0ZysxWVJmNGVVYTl5K2NsTlJHRHpxdVVKVWlVOTRPUTBpZlFGdCs5d3FvMEtUVG9JdlVkSk1udWhDTFdJZQo3endra3ZtN3FZUmMyVUc0WkxNcFQ2aUVUZkpqQXlXUnRwTUlieHdsYU5FRWdUdkRDclBOc3lrQ0F3RUFBYU5oCk1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLa01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUZWF6TmpYWGh6U2F2bk8zcERhUVovUzBSZQpGVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVWh6bFFnYUFvUjBNNGh6bTRDMkVrTHBRTTdielBFYWlsZ1NRClU4d3g3MXNjZ0ZpVUZ5M3pYSEV6TStac1R6aHV0WVZGMnFrTFBnZlFjVDQ5T01YSlprZVdzTWJMVThNM1pTdjcKMCtrVFZrdXlOYXVKU09NWFQrUlluQ2I2Q05SRHY5UHFCWGUyczdNYW5rSTV0VWRjbmE4VVYzYmxCMUYxM2R2RQpPa3RobjA0Y2p0RUwrb3MyQ1hEaHF0ejY1K0lIZnd2QXFoWHZvZXNoTUtma09QK2h2VDFnWDdPUE45Q3hCcHFVCjlXeGJ4cnZ3V013YklkbURGN3VuQ1NKU0pDUUVXZHR4K3VmYkVNQzJNV0l0VSsrNlNlNXdmTkdvR3dBVzBjNE0KeG5ZNnhyNWN0SmxqczBXWWhWTUNUWkE2WXNSNllORGVSUE5WcktFVWR1OEIwTTA5elE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: elasticsearch/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-master-credentials
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
type: Opaque
data:
  username: ZWxhc3RpYw==
  password: "MFpNUDRJM0U0aDJ3TENneQ=="
---
# Source: elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    {}
spec:
  type: ClusterIP
  selector:
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  publishNotReadyAddresses: false
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
# Source: elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master-headless
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app: "elasticsearch-master"
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
# Source: elasticsearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    esMajorVersion: "8"
spec:
  serviceName: elasticsearch-master-headless
  selector:
    matchLabels:
      app: "elasticsearch-master"
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-master
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
  template:
    metadata:
      name: "elasticsearch-master"
      labels:
        release: "elasticsearch"
        chart: "elasticsearch"
        app: "elasticsearch-master"
      annotations:
        
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "elasticsearch-master"
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
        - name: elasticsearch-certs
          secret:
           secretName: elasticsearch-master-certs
      enableServiceLinks: true
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        resources:
          {}

      containers:
      - name: "elasticsearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          exec:
            command:
              - bash
              - -c
              - |
                set -e

                # Exit if ELASTIC_PASSWORD in unset
                if [ -z "${ELASTIC_PASSWORD}" ]; then
                  echo "ELASTIC_PASSWORD variable is missing, exiting"
                  exit 1
                fi

                # If the node is starting up wait for the cluster to be ready (request params: "wait_for_status=green&timeout=1s" )
                # Once it has started only check that the node itself is responding
                START_FILE=/tmp/.es_start_file

                # Disable nss cache to avoid filling dentry cache when calling curl
                # This is required with Elasticsearch Docker using nss < 3.52
                export NSS_SDB_USE_CACHE=no

                http () {
                  local path="${1}"
                  local args="${2}"
                  set -- -XGET -s

                  if [ "$args" != "" ]; then
                    set -- "$@" $args
                  fi

                  set -- "$@" -u "elastic:${ELASTIC_PASSWORD}"

                  curl --output /dev/null -k "$@" "https://127.0.0.1:9200${path}"
                }

                if [ -f "${START_FILE}" ]; then
                  echo 'Elasticsearch is already running, lets check the node is healthy'
                  HTTP_CODE=$(http "/" "-w %{http_code}")
                  RC=$?
                  if [[ ${RC} -ne 0 ]]; then
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} https://127.0.0.1:9200/ failed with RC ${RC}"
                    exit ${RC}
                  fi
                  # ready if HTTP code 200, 503 is tolerable if ES version is 6.x
                  if [[ ${HTTP_CODE} == "200" ]]; then
                    exit 0
                  elif [[ ${HTTP_CODE} == "503" && "8" == "6" ]]; then
                    exit 0
                  else
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} https://127.0.0.1:9200/ failed with HTTP code ${HTTP_CODE}"
                    exit 1
                  fi

                else
                  echo 'Waiting for elasticsearch cluster to become ready (request params: "wait_for_status=green&timeout=1s" )'
                  if http "/_cluster/health?wait_for_status=green&timeout=1s" "--fail" ; then
                    touch ${START_FILE}
                    exit 0
                  else
                    echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                    exit 1
                  fi
                fi
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.initial_master_nodes
            value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2,"
          - name: node.roles
            value: "master,data,data_content,data_hot,data_warm,data_cold,ingest,ml,remote_cluster_client,transform,"
          - name: discovery.seed_hosts
            value: "elasticsearch-master-headless"
          - name: cluster.name
            value: "elasticsearch"
          - name: network.host
            value: "0.0.0.0"
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch-master-credentials
                key: password
          - name: xpack.security.enabled
            value: "true"
          - name: xpack.security.transport.ssl.enabled
            value: "true"
          - name: xpack.security.http.ssl.enabled
            value: "true"
          - name: xpack.security.transport.ssl.verification_mode
            value: "certificate"
          - name: xpack.security.transport.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.transport.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.transport.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
          - name: xpack.security.http.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.http.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.http.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
        volumeMounts:
          - name: "elasticsearch-master"
            mountPath: /usr/share/elasticsearch/data
          - name: elasticsearch-certs
            mountPath: /usr/share/elasticsearch/config/certs
            readOnly: true
---
# Source: elasticsearch/templates/test/test-elasticsearch-health.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "elasticsearch-mboqo-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  containers:
  - name: "elasticsearch-tqyau-test"
    env:
      - name: ELASTIC_PASSWORD
        valueFrom:
          secretKeyRef:
            name: elasticsearch-master-credentials
            key: password
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
    imagePullPolicy: "IfNotPresent"
    command:
      - "sh"
      - "-c"
      - |
        #!/usr/bin/env bash -e
        curl -XGET --fail --cacert /usr/share/elasticsearch/config/certs/tls.crt -u "elastic:${ELASTIC_PASSWORD}" https://'elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=1s'
    volumeMounts:
      - name: elasticsearch-certs
        mountPath: /usr/share/elasticsearch/config/certs
        readOnly: true
  restartPolicy: Never
  volumes:
    - name: elasticsearch-certs
      secret:
        secretName: elasticsearch-master-certs
