---
# Source: elasticsearch/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: "elasticsearch-master-pdb"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: "elasticsearch-master"
---
# Source: elasticsearch/templates/secret-cert.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: elasticsearch-master-certs
  labels:
    app: elasticsearch-master
    chart: "elasticsearch"
    heritage: Helm
    release: elasticsearch
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURpRENDQW5DZ0F3SUJBZ0lSQUtrdDNPYlA1MlZ1TU0yaEdscUJEKzB3RFFZSktvWklodmNOQVFFTEJRQXcKR3pFWk1CY0dBMVVFQXhNUVpXeGhjM1JwWTNObFlYSmphQzFqWVRBZUZ3MHlOVEF4TVRReE5USXlNVGhhRncweQpOakF4TVRReE5USXlNVGhhTUI4eEhUQWJCZ05WQkFNVEZHVnNZWE4wYVdOelpXRnlZMmd0YldGemRHVnlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtQkJ0bjJOeGw5Q2ZUWXk5U2pOWnR6OXMKSDZBanZqaU9MRmVCM2c3dE9HV3dQYjVXejZjT1dYeXNra3Ewc0xNQW9mK2VZZGlxSnRUbzdOM3ZRb3JJdEJieQpIZkl3ejRMZmFzempQdVhvMTRIb0xCZ29YRWJXdFZMY3RxSnQrbHVIQWMzZFRTTVBLN3ZWNFBnckpXcHNQc05kClk5Wnc5clloaXViKzJRSllaTlJCRU9FTHNSaFEzUlViTmlYeFZFeVJZR2x2aWFqVnpXa3RuT1d5ZkkzTDdMNXUKYjNtV2RSbTE2N2haSkRmU3M0RWEyMEhnOTROcFdJSXRQb2hmc2taaFEzU3Vqc2dMRGVGMW1QYy9QZVdqeFZTKwpoQ2hjVDZkRlFFVFMwdWlDaGRmZmNrZTV0SXVHcTBaTW1nRzVnbnR2K1hvOStPS3kvRmpoenVPVkMrZVY5d0lECkFRQUJvNEhDTUlHL01BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlQvRWE5QXgxdHhwVzJnbklybgpFUWwvcXBKTStUQmZCZ05WSFJFRVdEQldnaFJsYkdGemRHbGpjMlZoY21Ob0xXMWhjM1JsY29JY1pXeGhjM1JwClkzTmxZWEpqYUMxdFlYTjBaWEl1WkdWbVlYVnNkSUlnWld4aGMzUnBZM05sWVhKamFDMXRZWE4wWlhJdVpHVm0KWVhWc2RDNXpkbU13RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUoyY28vL3VxV0dlTjVOZXhGbXNQUWZFQVJrRgprTTZIcDF0S2tCaE1lblNEdWI4Z05sRkZjYXFobjY1SzNSRElMQWF3MzJxNTRORUR6dnN2bTBVNk5YcjYvd1NMCjFlWnBWbis0WDI1c0xMb1BQVUxVeEsyMUFCdi9mSGJ4REZPcjQvcjdmc0FkYVFrYkdmSFgwVjRiN0Q2cGorSkoKRzFFNTR2UGI1WnNmdUhDSjc0QjQ4Q0t1ODBrdmlESVRMbmlPYjdaclRIam9wbHhkd0o1cUZIeThWc1R0cDk5bApwQWVxQnNGL2cwMHRzb1NFTzkvS3ZOMXJ5Q1ZzekpyVVpQakUydFZUbDdYMVN2bUwvRks4TlVRc3dqRG9TY21KCjdhUnpmODh2T2REZEtCZTVWTE1RNlZYUnJPWVRTQXBzVlgyb2MyS2pGaURBbVdyZkZxZGg5cENhRThJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbUJCdG4yTnhsOUNmVFl5OVNqTlp0ejlzSDZBanZqaU9MRmVCM2c3dE9HV3dQYjVXCno2Y09XWHlza2txMHNMTUFvZitlWWRpcUp0VG83TjN2UW9ySXRCYnlIZkl3ejRMZmFzempQdVhvMTRIb0xCZ28KWEViV3RWTGN0cUp0K2x1SEFjM2RUU01QSzd2VjRQZ3JKV3BzUHNOZFk5Wnc5clloaXViKzJRSllaTlJCRU9FTApzUmhRM1JVYk5pWHhWRXlSWUdsdmlhalZ6V2t0bk9XeWZJM0w3TDV1YjNtV2RSbTE2N2haSkRmU3M0RWEyMEhnCjk0TnBXSUl0UG9oZnNrWmhRM1N1anNnTERlRjFtUGMvUGVXanhWUytoQ2hjVDZkRlFFVFMwdWlDaGRmZmNrZTUKdEl1R3EwWk1tZ0c1Z250ditYbzkrT0t5L0ZqaHp1T1ZDK2VWOXdJREFRQUJBb0lCQUdtTGZZc1R5dFJFeVUxYQpVa2dlUERja25qZVZQem5ZcDFXL3B6UXB5QjFNOTNiamxmMnJSaHAybnBFcnFSNjhIOFJSVisweUpXZXVmNzFvCmpaanlHenhrY01pNFFZakduYXZUYWlkT0RMOElPODNmTnFSVnh0RTBJbDNoZjlRMWt3OTloQXoyT0tGeVRwRkgKcnlyWkl5aXRFVFVxc2wyTExOenNXQmJudWRMQkxqNWk4WjE4Wk83SWZiTGsyTXp2Y0V1NVVuN3oyNG94eXI0dwpYUStud2VpNHdUM1QvQ1NRSm5VQWZ4bGR3TEdibDI5cTF5SFJKbzNvaGNCRFNUK3FSMWhKckF6bDBCbTZQVXBxCmZYcDQ3cllzL3Y2bXdyMjBNRWtqTzZRUUZwRGt0Rmtpb2xuQmVRalJCTmZhdWptcTJVVmNQdXJ5a0l0S2lzOUQKYjZxWUdBRUNnWUVBd3VMMGMzdkZBTnNCOTZPMjdJU3NmdmZJK0pMUzFFT201c2NWUGdsNTlaVXpMM0h3ajB3YwoxdjlNbG1LVHpYMWVVb0VkRk5SbkM2SktTWHZUMit3UkxOL2tsS2l3aVNSK0pHRXYwc1pqaWZjN3FWanR3OExrCmpTSzRlNUhKOFlibEFER3dVeHR2dTB2WmVXMkYyaUJ1N2xSWnB4bVNPSDN6MENlanR1akdRcmNDZ1lFQXg3L0sKcGJaMlU2TVhUUVRlRWNTQTEzUzZsb1lRSGRMTkRlMHA1YU1MZEVlTHV2SkFDT20wM0x2QjBrZGdWdUwwVzdIcwo3cVM2NDdTRFBNUXZYNlk0eEZ1TENNRE5hcTYxd25nZUx2QUxHVVVTa2Y4cUJRZWlVR1hWeW8vWDZTVW5uQUFVClVkRmRtaVplbkdCRE9OMGM0Tko2czNka3JKSTdoZ2I2VzhNWkJzRUNnWUVBanlOd2xnMTNBWXpaNGhBZHY1UW0KdWM2MmpsUVFnNVQ0MWhHcytYYXVYQURzcWxGT2RZRmF3VktiNXV5YVVGaGZXY3U1RjE1MkhPWmpGNXZhWEhJRApuMmtHazJWZTNDdXdkbm5uVFRFblZPTUFyLzVBREFOdUtIY3k5cGQ2c21uNGNtOE1hYzRCLzVmVE1FdVAvMGpKCkVVVmszOFY1VHdLN2U4eFJnM3R1ZXZzQ2dZQjEyTEJ0TGdZSGVCd0NJNUlFdDRNd0dqMFBHMDhjMlVhREpkM24KRGxkdXBkdEpVeXoyVlRPUVd2R1I1dXh1dG4xbUw4WFNVYnUxSmNXYnJ6OG4xa0I5a0dpcHBGNU14NENTbUIxdQpvYzVhZlVia2ZiOURzbXBQdHBUNGFmNy9IUjJPU3ZteC82eVNpbnFkRmFuelBYaVJKM3llcnh6bE4yMEl1TXN5CklodDh3UUtCZ0YvYnJITXBFVDRlS3UvTkRGeVFpVVhKb0EzVUkwSWNEMjArZkR3RklYNHlTcDZ4Q1lzZWkxTjgKbkxGbnVoSFE4enc2MG5Hc0s4c2p5R29OdTBsSmZrcUFQVVRidCtocXVnMHJkN1k5SHN2cllCUERKdlJQcUhvZAp1TDFUOStXemNUNEQ0NDRMUWFnQlZSajNlN3c0YUlhTHZMTE1HeXBXTksxTm5wbm51Y1N4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lRT0FoNEVBYVAxUGZKOE5aOFZGd2gzREFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCbGJHRnpkR2xqYzJWaGNtTm9MV05oTUI0WERUSTFNREV4TkRFMU1qSXhPRm9YRFRJMgpNREV4TkRFMU1qSXhPRm93R3pFWk1CY0dBMVVFQXhNUVpXeGhjM1JwWTNObFlYSmphQzFqWVRDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUx3YXl5elEyRktNY1dUVmxvLzErcGRoMkNGTnZmQmQKbFJNb09admsreWVlUHI0cENJTWVFVXNIUW1wTWhWMy9KWnRZaHhiTTh5VDlpdWkrZDh2Si96SGJHellwZDZVTgpGOTBKR3RJMVVvVXFsRHgzYjFnZjZqMHp6WDVSQ1BVRDhlOFhUd2xjbkFJeUlZbXFCSFVQOG1PNnRHaU1vSktLCk5FUkIwazNMV2FGbHhQV3l0TFVUR0lLaVVHMG1JcmZzTnZOK1Q3LzZZL0JwUGRnVmpGVG16YzYwYzE3eW9xTGUKRUtzM3U1WTlEZ2xSdlNEejRYU0hjVUVaMVI1ZXVlT29xeE4yaUVabDJrdG9qUUc3SC9mbWJFelNPeFhrTHUxNgpPZCtMWWlmVmlGNFFsSjlEYW5zTW9yL1Y0dFZHdTZ5TFNlRk9iNWFEU0lHaE5DNkgrNHFWaGRNQ0F3RUFBYU5oCk1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLa01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUL0VhOUF4MXR4cFcyZ25Jcm5FUWwvcXBKTQorVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBWUxIVTV2N1lMdUtPK2VWTFQ5YVFCY3hpWmVFaWNjVEZLN3JnCjkxeXlpaWEzbVg0TnhTdmxPenZweTBhZC9wV09lbm9NbVZwanRsa0FPVENDc1h0Vnp4ZlV4U3dwWXhNNXVKcjYKc1EvbFpsbTllYzVEU3RQVjQxcDJURm5SWWNyN2lsYlVhOE5FdVVnMUhsSmlOQXlYcmcwSEF2V2h2ZjYwTDhXNgpQQXBBU1hzdCt4S2RlV1ROSnphNDNxN1RNVzZaVXgrT1ZKdElNQlRtY3Y4SWhpVnBpenozZDlsQnQrVWN6MnMyCjBzVWp4M2xKa29VS2NyRWxSRVl3d3RkNzhhRmlrTzFRRldoaGFlTTcwSzRSbE0vZVdGZmpqZGpqRUtKeW56bzkKbnBwRURDVjVTSHRManV5am1OdGJtakVrTHc0TEpmdzREeXIrdW9iWGllOWRWTzhtSFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: elasticsearch/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-master-credentials
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
type: Opaque
data:
  username: ZWxhc3RpYw==
  password: "TEdlbjdINnVXQVBjTUVDaQ=="
---
# Source: elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    {}
spec:
  type: ClusterIP
  selector:
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  publishNotReadyAddresses: false
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
# Source: elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master-headless
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app: "elasticsearch-master"
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
# Source: elasticsearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    esMajorVersion: "8"
spec:
  serviceName: elasticsearch-master-headless
  selector:
    matchLabels:
      app: "elasticsearch-master"
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-master
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
  template:
    metadata:
      name: "elasticsearch-master"
      labels:
        release: "elasticsearch"
        chart: "elasticsearch"
        app: "elasticsearch-master"
      annotations:
        
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "elasticsearch-master"
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
        - name: elasticsearch-certs
          secret:
           secretName: elasticsearch-master-certs
      enableServiceLinks: true
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        resources:
          {}

      containers:
      - name: "elasticsearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          exec:
            command:
              - bash
              - -c
              - |
                set -e

                # Exit if ELASTIC_PASSWORD in unset
                if [ -z "${ELASTIC_PASSWORD}" ]; then
                  echo "ELASTIC_PASSWORD variable is missing, exiting"
                  exit 1
                fi

                # If the node is starting up wait for the cluster to be ready (request params: "wait_for_status=green&timeout=1s" )
                # Once it has started only check that the node itself is responding
                START_FILE=/tmp/.es_start_file

                # Disable nss cache to avoid filling dentry cache when calling curl
                # This is required with Elasticsearch Docker using nss < 3.52
                export NSS_SDB_USE_CACHE=no

                http () {
                  local path="${1}"
                  local args="${2}"
                  set -- -XGET -s

                  if [ "$args" != "" ]; then
                    set -- "$@" $args
                  fi

                  set -- "$@" -u "elastic:${ELASTIC_PASSWORD}"

                  curl --output /dev/null -k "$@" "https://127.0.0.1:9200${path}"
                }

                if [ -f "${START_FILE}" ]; then
                  echo 'Elasticsearch is already running, lets check the node is healthy'
                  HTTP_CODE=$(http "/" "-w %{http_code}")
                  RC=$?
                  if [[ ${RC} -ne 0 ]]; then
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} https://127.0.0.1:9200/ failed with RC ${RC}"
                    exit ${RC}
                  fi
                  # ready if HTTP code 200, 503 is tolerable if ES version is 6.x
                  if [[ ${HTTP_CODE} == "200" ]]; then
                    exit 0
                  elif [[ ${HTTP_CODE} == "503" && "8" == "6" ]]; then
                    exit 0
                  else
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} https://127.0.0.1:9200/ failed with HTTP code ${HTTP_CODE}"
                    exit 1
                  fi

                else
                  echo 'Waiting for elasticsearch cluster to become ready (request params: "wait_for_status=green&timeout=1s" )'
                  if http "/_cluster/health?wait_for_status=green&timeout=1s" "--fail" ; then
                    touch ${START_FILE}
                    exit 0
                  else
                    echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                    exit 1
                  fi
                fi
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.initial_master_nodes
            value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2,"
          - name: node.roles
            value: "master,data,data_content,data_hot,data_warm,data_cold,ingest,ml,remote_cluster_client,transform,"
          - name: discovery.seed_hosts
            value: "elasticsearch-master-headless"
          - name: cluster.name
            value: "elasticsearch"
          - name: network.host
            value: "0.0.0.0"
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch-master-credentials
                key: password
          - name: xpack.security.enabled
            value: "true"
          - name: xpack.security.transport.ssl.enabled
            value: "true"
          - name: xpack.security.http.ssl.enabled
            value: "true"
          - name: xpack.security.transport.ssl.verification_mode
            value: "certificate"
          - name: xpack.security.transport.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.transport.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.transport.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
          - name: xpack.security.http.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.http.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.http.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
        volumeMounts:
          - name: "elasticsearch-master"
            mountPath: /usr/share/elasticsearch/data
          - name: elasticsearch-certs
            mountPath: /usr/share/elasticsearch/config/certs
            readOnly: true
---
# Source: elasticsearch/templates/test/test-elasticsearch-health.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "elasticsearch-bbeuz-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  containers:
  - name: "elasticsearch-fgiah-test"
    env:
      - name: ELASTIC_PASSWORD
        valueFrom:
          secretKeyRef:
            name: elasticsearch-master-credentials
            key: password
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
    imagePullPolicy: "IfNotPresent"
    command:
      - "sh"
      - "-c"
      - |
        #!/usr/bin/env bash -e
        curl -XGET --fail --cacert /usr/share/elasticsearch/config/certs/tls.crt -u "elastic:${ELASTIC_PASSWORD}" https://'elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=1s'
    volumeMounts:
      - name: elasticsearch-certs
        mountPath: /usr/share/elasticsearch/config/certs
        readOnly: true
  restartPolicy: Never
  volumes:
    - name: elasticsearch-certs
      secret:
        secretName: elasticsearch-master-certs
