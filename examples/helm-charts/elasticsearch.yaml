---
# Source: elasticsearch/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: "elasticsearch-master-pdb"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: "elasticsearch-master"
---
# Source: elasticsearch/templates/secret-cert.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: elasticsearch-master-certs
  labels:
    app: elasticsearch-master
    chart: "elasticsearch"
    heritage: Helm
    release: elasticsearch
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURoekNDQW0rZ0F3SUJBZ0lRUmpHV2RhbEhJa3NmWVJCZWpaZm44ekFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCbGJHRnpkR2xqYzJWaGNtTm9MV05oTUI0WERUSTFNREV5TURJeE1Ua3hNbG9YRFRJMgpNREV5TURJeE1Ua3hNbG93SHpFZE1Cc0dBMVVFQXhNVVpXeGhjM1JwWTNObFlYSmphQzF0WVhOMFpYSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2pTR2pZWHRGVnFUTUxBdFdRL1dWMm4vL3cKNFNBSFo5Wkloa0FmU0JUT3V0N1MvSzByUklSczVrMDVsL3dVOEdlWWhxVmxHdUhrS21tRytOb3RnYTl6ZEJCWgpvazJNT09PQ0t1S2dSUjcveXdJRFA3Q3lCeFRjSW5oMjlIU1czR0RNUnV5RytmQVZvZGlEdU5BVXBTcEd0ejA0CkNyN1A5bzVZakIzaWs0MGhyajltV0FTTEs3Ri9VTGFqRDcrWWV4bEpOL3E1VzBRUGsxRFA0VmR1M1hEUGhmVlQKcDdycW53Wjk4cHA2K1lKd2RjZmRpWTJpR0IrdGttZzdrVXdDNXYvWmVpNXVpZG1nZW1sQ214NWh6Z0s2Ylo2eQprWGRVOGF2dEJwQ2hJSnN1Wk03ZkowaS80dVVHdW52alRiZDM3cVFPeFk5QU9hK1NRMzNkakJxUWs0WjNBZ01CCkFBR2pnY0l3Z2I4d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGUFRKYTBwTVlxYTNuWW90VTZpZgpyK1Zzd1hGSU1GOEdBMVVkRVFSWU1GYUNGR1ZzWVhOMGFXTnpaV0Z5WTJndGJXRnpkR1Z5Z2h4bGJHRnpkR2xqCmMyVmhjbU5vTFcxaGMzUmxjaTVrWldaaGRXeDBnaUJsYkdGemRHbGpjMlZoY21Ob0xXMWhjM1JsY2k1a1pXWmgKZFd4MExuTjJZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBT3JUZXJ0eTcxb0lpemh3UnhIRTdCYm1HTmN6RwpFL2M4MkNpTE1jSGRjSWxWUlJGNGhxVmFXcTJSZ3FKZEsyTXUvek1aMWxhdXk5SEY3UWt4dkxIRWd6Z05FaitXCjFZSlh6cVBtcUgzd3hNVm9GcW0vc2pTS0tCeWV4QUdqM0RUTEFpTTdCWStQcTZwcHlod3V6RzhpcXcxbURRd0MKdjI4M3VYTVo5aGJ6SG1sdEgxVWR2cnhVS1hJZjRlV295QUgyeVBTT1V2cExoNkZ0a2VtT1h1aXBXa1lYc2FzbgpIa3BFWlNoUmdGMDc5djJyaXA2ZHQ5Qy8vRldSVVpQM1lkbkdxc3BhbVFtVGo0MlJ5ZnplNkhIZk54UFpDSGtSClJvODdXZEhsbXRUZGluR29sS0ZpdDI0dzBQS0M1Y0NqL1BZMEtDaHlNUUdSZkcySFl3cU1FTEdEZlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbzBobzJGN1JWYWt6Q3dMVmtQMWxkcC8vOE9FZ0IyZldTSVpBSDBnVXpycmUwdnl0CkswU0ViT1pOT1pmOEZQQm5tSWFsWlJyaDVDcHBodmphTFlHdmMzUVFXYUpOakRqamdpcmlvRVVlLzhzQ0F6K3cKc2djVTNDSjRkdlIwbHR4Z3pFYnNodm53RmFIWWc3alFGS1VxUnJjOU9BcSt6L2FPV0l3ZDRwT05JYTQvWmxnRQppeXV4ZjFDMm93Ky9tSHNaU1RmNnVWdEVENU5ReitGWGJ0MXd6NFgxVTZlNjZwOEdmZkthZXZtQ2NIWEgzWW1OCm9oZ2ZyWkpvTzVGTUF1Yi8yWG91Ym9uWm9IcHBRcHNlWWM0Q3VtMmVzcEYzVlBHcjdRYVFvU0NiTG1UTzN5ZEkKditMbEJycDc0MDIzZCs2a0RzV1BRRG12a2tOOTNZd2FrSk9HZHdJREFRQUJBb0lCQVFDUTRPRFdpMXNtckppegp2bklNMGluREZiaWMzTVAwampmZDVmRGpVS3ZWdW8yWG04ZHpTcnBOZmhNcmRTV2cxcWEwK1ZPcjRDeHFyUTh4ClNZRWRPNktYeUhYeGNrZG9rZG1jVjd6NkJCcTdVRCthN2xvenZJRFB5bTRrN2thOHpSRytiM2ZUVTlXby9CQUcKNEdjUXluUTJoc1AxQStQRzFyZjY3V2hlOEJrYnRmdGZQNGZvVmU4TXltejRlRWVkVGtpTXhyK2VVLzZZdHBnawoySUpYTm9BUm5TQk4xMzRHV2Y1RzRISi9qWWVQdHFqTFNmaVZ5Z2h6WlRIY0hWSDVVMkxEN3doZ2xKaTlUcVR4CnlQT2xseVQ1QlJqUkpHcHpUU0JydXRLWklic21ibkpJYkI0TWpFUnFDeU1oSlhHdC9YNWF5eHhic05FSStqQjkKMC9SUHloL0JBb0dCQU1ZWmlYdVU5M0lNb1NXWjRkdzhDenNzcWlVcHFDcWw4b09ZKytpU3ZUeUQ3SmZlb1diaAoxQmVMK2tobGJVay9pcnNzTWFtdk16NTk0Y1hXYy9kajNQdjM5NlBzbUZJWUFJV2RHZ2JaK1ltb1U2OFl6eFhaClFXZy9vSDBtbU51RDNmbnYvOXhHbzdnMXF2K1NhVXhxUjRnczJXdDBVQmZpZ3V2VFFwLzdBRUJ4QW9HQkFOTUIKd21XYUtNVGh2QVNCenZzTVFJSFZHT1ZPODJFUUpmcS9JVmczRVNqMmg4OENNWGF3MTJGd2JpMEVFZS90OXlMbwpVM1pQOHczb2tQVTVsQkFtOC93d1FKVXl4bXlPT25lUXhQWkJPcjlIa3BrTVdUb0hyOXhPRndablY5Y29Ha3pzCklkYml2R0pVdUlxczVtbkp0YXVwODl0SkROWEM2amcyb0Vqdlg2bG5Bb0dCQUtBZ0dEOHFoSEZOd0J4U3JIeUcKbEZWNm52VjNISldNbWVEQmtpM0dIdXlCZm9hcjBDOEhMNWJ3OEpnQVZEdzIvbjZaRkhPaVNIdWs2UkF2Ym9GegoyVFphazNPUFZQaFdxbVZXUGFsNEcvcW5jeTAva25TSXJoUUVDa2ZmSVFPZkxaaFA1TE02N2krQ1FmeGZibm4wCkZtbitScWhTMWtMWU54ZEVKc0NGOVFnaEFvR0FPd2tpK29wSEhjNktiRGhsVUpmODlGWkt3TjExK3BJcURoMnIKbHFMUmlrUnZldHVDTzFMKzc2UWxMek1VVWF5aW1JR24yRkpHRG40akVIa3JrOWxTS2h6VjlPaGYyNzl2WEVTRQoxdUVwTHBzM3lOcExuSkRLQXpsVjk5U3lIdUI1ZTB3VnE2bUVTMzZvb3lQODAxdzhGK3RVN3VWaFVlMVcycU50CjlQb0VLY0VDZ1lBZEgrSmhGM1p6LzRuV1lCd1pvY2c4czFiOEdlV1dMN3pCdFJOK1RrSFI1aUVYYnV6Q05SNVYKanBnNm5xT0MyVzZ5ellHMmFTZlBHUC9yaStpeWs0TW5YNmk5cTcrd3lDMHpiT1gzcVB4dDNEQ2NmRDFJRk5TYgoveTdmZjdkOCtzZ3NoTWpnWGVEbDlvT1crNlV5QjN5cHVjVnhaT2xZU3NFcmpTbDQ5b0lLN2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJakNDQWdxZ0F3SUJBZ0lSQUkxMitlbGU4eFg4VGwyTFNpcjdTT2d3RFFZSktvWklodmNOQVFFTEJRQXcKR3pFWk1CY0dBMVVFQXhNUVpXeGhjM1JwWTNObFlYSmphQzFqWVRBZUZ3MHlOVEF4TWpBeU1URTVNVEphRncweQpOakF4TWpBeU1URTVNVEphTUJzeEdUQVhCZ05WQkFNVEVHVnNZWE4wYVdOelpXRnlZMmd0WTJFd2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDOUF1b1Zqa0w4UHY0OVFzN3Nvd0NoT2xsVEFyczIKTTdEcFVyUjhmbE1oYWtQYzd6Mk5sRmNMeUhrdXROZzZVM3B5cFRLajFJcWdkZldPNVVnbEp3YjErZG1UYzRtTAoySGFKb0JhUzNrMW8wdHV2WFJ2ZmFMTWdoaUFYYjdpYTBUbjgrZXdwRlVHOXp6ZDQ3eWhGVnB1akE0Yyswdk8zCjhISEdtM0Zoa1FvN1VsYmFTL2YyRWpTTzRucGpTQUFWaVcyMWpPeDAzRHFWM0pMQ1BjNStyNlJJQ2E2RThzRmYKbEU4WDFXZXA2Y0poa1BzOEtFc2g4TFNsVnM4OFdpbVp0RnJsbG02NHIxeEwzOE1SNS9ETm14azVHemF1dzN5VAo5N0Ira1d0ZFRwUnl4WWo2QzUrQ1JQMzVMSGhBZTUvUkhsRzY1ODcxVlQzL0t2eW5ib3p2dXVrN0FnTUJBQUdqCllUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUgKQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVTlNbHJTa3hpcHJlZGlpMVRxSit2NVd6QgpjVWd3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUZKU2Q2V0FNSHhjb1MwQWxNS3RXNE5KQ1NoVEZxR1RLOUt6CmtHTk00MlVGeTBEYkNvQ1NMUG5wemg5YVJmRkIrYWZlcTNxY2Erbml0Uklua2NqeDUyemxuamhqKzhCNURRTVcKeEZSUURwZGk1MTJvOWE5anppbTUxZm9Sa3R4R2tUTlIwWWtrcGlKaUoxYTNnTTZYRUlUL28wYy9aeGtMbVRXVgpYWlZaU09TaTNUdlNjRVFyVlArR1N5UG4zbDRldTI2UlJYMzdzd0xxMnhpWTUxUXV1azBRS3FBRHdxVEtTV1dUCngzQVdoSHo2U3hML054NTB1eEdsYmtYbi9veW1keExJc3lLTlFPWTBvaXNjVzNabmowWTdQWkpIcWJ2RGpIc0sKM2g5amhLZDdHUjFNdC9VNmZaVDhRclVMUmdyOVBoVXg1YUk1U1VYUkxQQlE4MGhpdWdRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: elasticsearch/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-master-credentials
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
type: Opaque
data:
  username: ZWxhc3RpYw==
  password: "QXFrMWNoZ1FzVG9iWDl0dA=="
---
# Source: elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    {}
spec:
  type: ClusterIP
  selector:
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  publishNotReadyAddresses: false
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
# Source: elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master-headless
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app: "elasticsearch-master"
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
# Source: elasticsearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    esMajorVersion: "8"
spec:
  serviceName: elasticsearch-master-headless
  selector:
    matchLabels:
      app: "elasticsearch-master"
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-master
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
  template:
    metadata:
      name: "elasticsearch-master"
      labels:
        release: "elasticsearch"
        chart: "elasticsearch"
        app: "elasticsearch-master"
      annotations:
        
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "elasticsearch-master"
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
        - name: elasticsearch-certs
          secret:
           secretName: elasticsearch-master-certs
      enableServiceLinks: true
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        resources:
          {}

      containers:
      - name: "elasticsearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          exec:
            command:
              - bash
              - -c
              - |
                set -e

                # Exit if ELASTIC_PASSWORD in unset
                if [ -z "${ELASTIC_PASSWORD}" ]; then
                  echo "ELASTIC_PASSWORD variable is missing, exiting"
                  exit 1
                fi

                # If the node is starting up wait for the cluster to be ready (request params: "wait_for_status=green&timeout=1s" )
                # Once it has started only check that the node itself is responding
                START_FILE=/tmp/.es_start_file

                # Disable nss cache to avoid filling dentry cache when calling curl
                # This is required with Elasticsearch Docker using nss < 3.52
                export NSS_SDB_USE_CACHE=no

                http () {
                  local path="${1}"
                  local args="${2}"
                  set -- -XGET -s

                  if [ "$args" != "" ]; then
                    set -- "$@" $args
                  fi

                  set -- "$@" -u "elastic:${ELASTIC_PASSWORD}"

                  curl --output /dev/null -k "$@" "https://127.0.0.1:9200${path}"
                }

                if [ -f "${START_FILE}" ]; then
                  echo 'Elasticsearch is already running, lets check the node is healthy'
                  HTTP_CODE=$(http "/" "-w %{http_code}")
                  RC=$?
                  if [[ ${RC} -ne 0 ]]; then
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} https://127.0.0.1:9200/ failed with RC ${RC}"
                    exit ${RC}
                  fi
                  # ready if HTTP code 200, 503 is tolerable if ES version is 6.x
                  if [[ ${HTTP_CODE} == "200" ]]; then
                    exit 0
                  elif [[ ${HTTP_CODE} == "503" && "8" == "6" ]]; then
                    exit 0
                  else
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} https://127.0.0.1:9200/ failed with HTTP code ${HTTP_CODE}"
                    exit 1
                  fi

                else
                  echo 'Waiting for elasticsearch cluster to become ready (request params: "wait_for_status=green&timeout=1s" )'
                  if http "/_cluster/health?wait_for_status=green&timeout=1s" "--fail" ; then
                    touch ${START_FILE}
                    exit 0
                  else
                    echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                    exit 1
                  fi
                fi
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.initial_master_nodes
            value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2,"
          - name: node.roles
            value: "master,data,data_content,data_hot,data_warm,data_cold,ingest,ml,remote_cluster_client,transform,"
          - name: discovery.seed_hosts
            value: "elasticsearch-master-headless"
          - name: cluster.name
            value: "elasticsearch"
          - name: network.host
            value: "0.0.0.0"
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch-master-credentials
                key: password
          - name: xpack.security.enabled
            value: "true"
          - name: xpack.security.transport.ssl.enabled
            value: "true"
          - name: xpack.security.http.ssl.enabled
            value: "true"
          - name: xpack.security.transport.ssl.verification_mode
            value: "certificate"
          - name: xpack.security.transport.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.transport.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.transport.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
          - name: xpack.security.http.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.http.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.http.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
        volumeMounts:
          - name: "elasticsearch-master"
            mountPath: /usr/share/elasticsearch/data
          - name: elasticsearch-certs
            mountPath: /usr/share/elasticsearch/config/certs
            readOnly: true
---
# Source: elasticsearch/templates/test/test-elasticsearch-health.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "elasticsearch-xzaiz-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  containers:
  - name: "elasticsearch-gpxhp-test"
    env:
      - name: ELASTIC_PASSWORD
        valueFrom:
          secretKeyRef:
            name: elasticsearch-master-credentials
            key: password
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
    imagePullPolicy: "IfNotPresent"
    command:
      - "sh"
      - "-c"
      - |
        #!/usr/bin/env bash -e
        curl -XGET --fail --cacert /usr/share/elasticsearch/config/certs/tls.crt -u "elastic:${ELASTIC_PASSWORD}" https://'elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=1s'
    volumeMounts:
      - name: elasticsearch-certs
        mountPath: /usr/share/elasticsearch/config/certs
        readOnly: true
  restartPolicy: Never
  volumes:
    - name: elasticsearch-certs
      secret:
        secretName: elasticsearch-master-certs
