apiVersion: v1
items:
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-admin: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:rules: {}
      manager: clusterrole-aggregation-controller
      operation: Apply
      time: "2024-12-29T05:34:41Z"
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:aggregationRule:
          .: {}
          f:clusterRoleSelectors: {}
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: admin
    resourceVersion: "745"
    uid: 788d5df7-f143-41be-8322-4e100f0f0ecf
  rules:
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: cluster-admin
    resourceVersion: "72"
    uid: e114da51-ac51-4d84-b41a-058e47a5f002
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - '*'
  - nonResourceURLs:
    - '*'
    verbs:
    - '*'
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-edit: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:rules: {}
      manager: clusterrole-aggregation-controller
      operation: Apply
      time: "2024-12-29T05:34:41Z"
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:aggregationRule:
          .: {}
          f:clusterRoleSelectors: {}
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
            f:rbac.authorization.k8s.io/aggregate-to-admin: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: edit
    resourceVersion: "741"
    uid: 7d1ea097-a98a-4995-9f4f-9df43414db8f
  rules:
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"name":"ingress-nginx"},"rules":[{"apiGroups":[""],"resources":["configmaps","endpoints","nodes","pods","secrets","namespaces"],"verbs":["list","watch"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["list","watch"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get"]},{"apiGroups":[""],"resources":["services"],"verbs":["get","list","watch"]},{"apiGroups":["networking.k8s.io"],"resources":["ingresses"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["events"],"verbs":["create","patch"]},{"apiGroups":["networking.k8s.io"],"resources":["ingresses/status"],"verbs":["update"]},{"apiGroups":["networking.k8s.io"],"resources":["ingressclasses"],"verbs":["get","list","watch"]},{"apiGroups":["discovery.k8s.io"],"resources":["endpointslices"],"verbs":["list","watch","get"]}]}
    creationTimestamp: "2024-12-29T05:33:21Z"
    labels:
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:rules: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:33:21Z"
    name: ingress-nginx
    resourceVersion: "546"
    uid: 99350783-df83-4675-922e-593d0fd10845
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - nodes
    - pods
    - secrets
    - namespaces
    verbs:
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses/status
    verbs:
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingressclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"admission-webhook","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"name":"ingress-nginx-admission"},"rules":[{"apiGroups":["admissionregistration.k8s.io"],"resources":["validatingwebhookconfigurations"],"verbs":["get","update"]}]}
    creationTimestamp: "2024-12-29T05:33:21Z"
    labels:
      app.kubernetes.io/component: admission-webhook
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:rules: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:33:21Z"
    name: ingress-nginx-admission
    resourceVersion: "547"
    uid: c776cfb0-1232-4877-9736-ce0586c6fdb7
  rules:
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingwebhookconfigurations
    verbs:
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2024-12-29T05:30:55Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:rules: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:55Z"
    name: kubeadm:get-nodes
    resourceVersion: "217"
    uid: 5c5a12db-aefd-4e2e-a14e-03eeb3231cce
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kubernetes-dashboard","kubernetes.io/minikube-addons":"dashboard"},"name":"kubernetes-dashboard"},"rules":[{"apiGroups":["metrics.k8s.io"],"resources":["pods","nodes"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2024-12-29T05:32:55Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kubernetes-dashboard
      kubernetes.io/minikube-addons: dashboard
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:kubernetes.io/minikube-addons: {}
        f:rules: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:32:55Z"
    name: kubernetes-dashboard
    resourceVersion: "460"
    uid: 6a42a329-8d60-4cde-9006-6b9fe042bbd8
  rules:
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    - nodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
            f:rbac.authorization.k8s.io/aggregate-to-admin: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:aggregate-to-admin
    resourceVersion: "80"
    uid: 2158011f-17b7-4895-a92e-132d3acafbb5
  rules:
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
            f:rbac.authorization.k8s.io/aggregate-to-edit: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:aggregate-to-edit
    resourceVersion: "81"
    uid: 59c7815b-3677-4fed-a74a-4137576793f5
  rules:
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-view: "true"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
            f:rbac.authorization.k8s.io/aggregate-to-view: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:aggregate-to-view
    resourceVersion: "82"
    uid: 1efa3d02-c524-4050-9895-7c7443869f7b
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"metrics-server","rbac.authorization.k8s.io/aggregate-to-admin":"true","rbac.authorization.k8s.io/aggregate-to-edit":"true","rbac.authorization.k8s.io/aggregate-to-view":"true"},"name":"system:aggregated-metrics-reader"},"rules":[{"apiGroups":["metrics.k8s.io"],"resources":["pods","nodes"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2024-12-29T05:34:41Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
      rbac.authorization.k8s.io/aggregate-to-view: "true"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:rbac.authorization.k8s.io/aggregate-to-admin: {}
            f:rbac.authorization.k8s.io/aggregate-to-edit: {}
            f:rbac.authorization.k8s.io/aggregate-to-view: {}
        f:rules: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:34:41Z"
    name: system:aggregated-metrics-reader
    resourceVersion: "733"
    uid: ced3e08f-f795-4782-9b55-279148ebfafc
  rules:
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    - nodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:auth-delegator
    resourceVersion: "88"
    uid: 0f1637b6-0255-4e84-8640-335ad5200756
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:basic-user
    resourceVersion: "75"
    uid: 5cac1612-4269-4f7f-b512-93fb0f0c5426
  rules:
  - apiGroups:
    - authorization.k8s.io
    resources:
    - selfsubjectaccessreviews
    - selfsubjectrulesreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
    resourceVersion: "93"
    uid: f7d56bc1-c8ab-48a4-9e4c-07d13ca3f149
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/nodeclient
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
    resourceVersion: "94"
    uid: 08c47c81-5d06-4089-b5a9-90caf69da7ee
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/selfnodeclient
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:certificates.k8s.io:kube-apiserver-client-approver
    resourceVersion: "98"
    uid: 304d1a4d-87ed-4015-9e60-4854da0e56f7
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:certificates.k8s.io:kube-apiserver-client-kubelet-approver
    resourceVersion: "99"
    uid: 6dac5dd4-d268-41a5-8261-69af50ce78ff
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client-kubelet
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:certificates.k8s.io:kubelet-serving-approver
    resourceVersion: "97"
    uid: 5ec97f45-07e0-4051-b6c5-1061f02eb094
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kubelet-serving
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:certificates.k8s.io:legacy-unknown-approver
    resourceVersion: "96"
    uid: 8de00db9-f917-457d-b282-d0a3a81ffcb1
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/legacy-unknown
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:attachdetach-controller
    resourceVersion: "103"
    uid: 4bfe308e-a8e3-4cac-98ef-0aecc166257d
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:certificate-controller
    resourceVersion: "129"
    uid: d9ebb765-4139-402a-89fe-00a9cff493ad
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/approval
    - certificatesigningrequests/status
    verbs:
    - update
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client-kubelet
    resources:
    - signers
    verbs:
    - approve
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client
    - kubernetes.io/kube-apiserver-client-kubelet
    - kubernetes.io/kubelet-serving
    - kubernetes.io/legacy-unknown
    resources:
    - signers
    verbs:
    - sign
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:clusterrole-aggregation-controller
    resourceVersion: "104"
    uid: d7eda45c-9030-473f-8e17-edffadedca45
  rules:
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - clusterroles
    verbs:
    - escalate
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:cronjob-controller
    resourceVersion: "105"
    uid: e896da84-b4bd-43e4-9ceb-5d1dc34bd41e
  rules:
  - apiGroups:
    - batch
    resources:
    - cronjobs
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs/status
    verbs:
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - list
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:daemon-set-controller
    resourceVersion: "106"
    uid: 9cc26026-6bc4-45f8-bd12-6f7776ba79a6
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/binding
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:deployment-controller
    resourceVersion: "107"
    uid: fc39817e-1684-4005-9fd7-84334b1b5ce4
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments/finalizers
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:disruption-controller
    resourceVersion: "108"
    uid: 668dd7b6-0ca1-41bb-8da7-e80df52dd267
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets/status
    verbs:
    - update
  - apiGroups:
    - '*'
    resources:
    - '*/scale'
    verbs:
    - get
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:endpoint-controller
    resourceVersion: "109"
    uid: faf65daa-d1d2-4232-b64f-dca760aca05c
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    resources:
    - endpoints/restricted
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:endpointslice-controller
    resourceVersion: "110"
    uid: 155ed878-d557-444c-aa78-219c4842dfa8
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    - pods
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/finalizers
    verbs:
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:endpointslicemirroring-controller
    resourceVersion: "111"
    uid: 6a7b7277-2610-47e0-ab58-1a8ecc53d333
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - endpoints/finalizers
    verbs:
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:ephemeral-volume-controller
    resourceVersion: "113"
    uid: d1cd32be-9412-4b84-8009-5242c6378d86
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:expand-controller
    resourceVersion: "112"
    uid: 6cf3de94-0cdf-4c05-a913-b9e0951bea52
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:generic-garbage-collector
    resourceVersion: "114"
    uid: 8b803158-7fed-4232-ac5a-51616a86a345
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:horizontal-pod-autoscaler
    resourceVersion: "115"
    uid: e96aacef-7652-416e-8a63-e5cc6eb4e484
  rules:
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers/status
    verbs:
    - update
  - apiGroups:
    - '*'
    resources:
    - '*/scale'
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
  - apiGroups:
    - ""
    resourceNames:
    - 'http:heapster:'
    - 'https:heapster:'
    resources:
    - services/proxy
    verbs:
    - get
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    verbs:
    - list
  - apiGroups:
    - custom.metrics.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
  - apiGroups:
    - external.metrics.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:job-controller
    resourceVersion: "116"
    uid: 907c26b4-0cb8-4c97-aac2-9048a1618eab
  rules:
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs/status
    verbs:
    - update
  - apiGroups:
    - batch
    resources:
    - jobs/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:namespace-controller
    resourceVersion: "117"
    uid: 4aee57ef-97e6-4d21-bcde-0fd6d34a7790
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces/finalize
    - namespaces/status
    verbs:
    - update
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - delete
    - deletecollection
    - get
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:node-controller
    resourceVersion: "118"
    uid: 89dccb7f-f2b4-4e7f-a564-055ef9934bbb
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - delete
    - get
    - list
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - list
  - apiGroups:
    - networking.k8s.io
    resources:
    - clustercidrs
    verbs:
    - create
    - get
    - list
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:persistent-volume-binder
    resourceVersion: "119"
    uid: 042c8677-12be-4ea2-bfea-ee5ccbe9abd9
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumes/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - delete
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - create
    - delete
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:pod-garbage-collector
    resourceVersion: "120"
    uid: ec9a75f7-ac42-47f7-89c6-62bc7edce77a
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:pv-protection-controller
    resourceVersion: "131"
    uid: 356a3302-cfb2-4734-bc8f-4166e6a15dd4
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:pvc-protection-controller
    resourceVersion: "130"
    uid: 7be9e6ed-7352-4e79-94fe-3ac4ad6cf78a
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:replicaset-controller
    resourceVersion: "121"
    uid: c972455b-d799-4c2f-b73e-d37571c48354
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:replication-controller
    resourceVersion: "122"
    uid: 1a2337d8-a43c-47f6-8a77-df9a1a8b6c98
  rules:
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:resourcequota-controller
    resourceVersion: "123"
    uid: b3a2e187-efd1-4c9c-936f-0c7b9f15d404
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - resourcequotas/status
    verbs:
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:root-ca-cert-publisher
    resourceVersion: "133"
    uid: a488b6c9-75b0-4c4c-b444-f357494baac8
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:route-controller
    resourceVersion: "124"
    uid: a5865817-e21f-46b9-bce8-5f59841b90a3
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:service-account-controller
    resourceVersion: "125"
    uid: 28b4847e-f071-4889-b0fd-87e60bec53bc
  rules:
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:service-controller
    resourceVersion: "126"
    uid: 506b2f31-f187-44c8-927d-911827043e4f
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:statefulset-controller
    resourceVersion: "127"
    uid: d37d133d-21a7-4dcd-9967-f2fa09411098
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets/status
    verbs:
    - update
  - apiGroups:
    - apps
    resources:
    - statefulsets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - create
    - get
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:ttl-after-finished-controller
    resourceVersion: "132"
    uid: fbb5afc6-535d-40c4-bf0e-89546e68bc37
  rules:
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:controller:ttl-controller
    resourceVersion: "128"
    uid: 7fcdb829-79e9-4611-9ff9-fcd7338a8780
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2024-12-29T05:30:57Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:rules: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:57Z"
    name: system:coredns
    resourceVersion: "234"
    uid: 7f8cc3e6-4cfa-4009-96ca-2c92c80389e5
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    - pods
    - namespaces
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:discovery
    resourceVersion: "73"
    uid: 45ee1546-d0b2-4051-bb37-386b6eee8416
  rules:
  - nonResourceURLs:
    - /api
    - /api/*
    - /apis
    - /apis/*
    - /healthz
    - /livez
    - /openapi
    - /openapi/*
    - /readyz
    - /version
    - /version/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:heapster
    resourceVersion: "83"
    uid: f89d54c0-d4bd-453d-bb9a-c2f8fdea239c
  rules:
  - apiGroups:
    - ""
    resources:
    - events
    - namespaces
    - nodes
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:kube-aggregator
    resourceVersion: "89"
    uid: 155ea0c3-b69c-4070-9b38-cbbe93fa34f0
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:kube-controller-manager
    resourceVersion: "90"
    uid: ba467bf1-b228-4797-ace8-2b0449c9a3c3
  rules:
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - kube-controller-manager
    resources:
    - leases
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
  - apiGroups:
    - ""
    resourceNames:
    - kube-controller-manager
    resources:
    - endpoints
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - secrets
    - serviceaccounts
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - delete
  - apiGroups:
    - ""
    resources:
    - configmaps
    - namespaces
    - secrets
    - serviceaccounts
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    - serviceaccounts
    verbs:
    - update
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:kube-dns
    resourceVersion: "91"
    uid: 022f11fe-ae80-41f8-b5b8-347c8d84daf9
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:kube-scheduler
    resourceVersion: "102"
    uid: 83d7b0e5-edb7-4672-ac4c-b0eeec4b4b99
  rules:
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - kube-scheduler
    resources:
    - leases
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
  - apiGroups:
    - ""
    resourceNames:
    - kube-scheduler
    resources:
    - endpoints
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - pods/binding
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csistoragecapacities
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:kubelet-api-admin
    resourceVersion: "86"
    uid: 29afaad5-7e6a-4080-9379-fda9d991470e
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - proxy
  - apiGroups:
    - ""
    resources:
    - nodes/log
    - nodes/metrics
    - nodes/proxy
    - nodes/spec
    - nodes/stats
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"metrics-server"},"name":"system:metrics-server"},"rules":[{"apiGroups":[""],"resources":["nodes/metrics"],"verbs":["get"]},{"apiGroups":[""],"resources":["pods","nodes"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2024-12-29T05:34:41Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
        f:rules: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:34:41Z"
    name: system:metrics-server
    resourceVersion: "748"
    uid: 584ace19-0699-4691-8c61-7ed9f3b23624
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes/metrics
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - pods
    - nodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:monitoring
    resourceVersion: "74"
    uid: 4cd2b766-12fa-4ee3-8738-0b1c26fb2937
  rules:
  - nonResourceURLs:
    - /healthz
    - /healthz/*
    - /livez
    - /livez/*
    - /metrics
    - /metrics/slis
    - /readyz
    - /readyz/*
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:node
    resourceVersion: "84"
    uid: 484e4e6d-986c-418d-8010-641b986d67c7
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - get
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - node.k8s.io
    resources:
    - runtimeclasses
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:node-bootstrapper
    resourceVersion: "87"
    uid: 84a62a1d-77d4-4428-b322-a380dfd857bf
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - create
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:node-problem-detector
    resourceVersion: "85"
    uid: 519abaf2-8412-4710-851c-25e80f6418b3
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:node-proxier
    resourceVersion: "101"
    uid: 47637489-1b9f-483b-8dc3-159ff050e83f
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:persistent-volume-provisioner
    resourceVersion: "92"
    uid: f62bc5f8-cb08-4c90-8816-04138127f196
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:public-info-viewer
    resourceVersion: "76"
    uid: bae031f5-d30b-4e84-8ed5-7138ad816f7b
  rules:
  - nonResourceURLs:
    - /healthz
    - /livez
    - /readyz
    - /version
    - /version/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:service-account-issuer-discovery
    resourceVersion: "100"
    uid: d7d582fb-c5bf-4f89-9577-69db235f33ca
  rules:
  - nonResourceURLs:
    - /.well-known/openid-configuration
    - /openid/v1/jwks
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:volume-scheduler
    resourceVersion: "95"
    uid: b702b11b-c563-444a-9cea-eb94411131b5
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - patch
    - update
    - watch
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-view: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:rules: {}
      manager: clusterrole-aggregation-controller
      operation: Apply
      time: "2024-12-29T05:34:41Z"
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:aggregationRule:
          .: {}
          f:clusterRoleSelectors: {}
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
            f:rbac.authorization.k8s.io/aggregate-to-edit: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: view
    resourceVersion: "739"
    uid: dbaf393a-2d33-4a25-b6a2-37fc33af7d50
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    - nodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: cluster-admin
    resourceVersion: "134"
    uid: 35f87365-0c8e-4063-8daf-aeb8543d3a4a
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:masters
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"name":"ingress-nginx"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"ingress-nginx"},"subjects":[{"kind":"ServiceAccount","name":"ingress-nginx","namespace":"ingress-nginx"}]}
    creationTimestamp: "2024-12-29T05:33:21Z"
    labels:
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:33:21Z"
    name: ingress-nginx
    resourceVersion: "550"
    uid: 81920af5-1492-4b91-87e7-9cf670f2ea0a
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: ingress-nginx
  subjects:
  - kind: ServiceAccount
    name: ingress-nginx
    namespace: ingress-nginx
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"admission-webhook","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"name":"ingress-nginx-admission"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"ingress-nginx-admission"},"subjects":[{"kind":"ServiceAccount","name":"ingress-nginx-admission","namespace":"ingress-nginx"}]}
    creationTimestamp: "2024-12-29T05:33:21Z"
    labels:
      app.kubernetes.io/component: admission-webhook
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:33:21Z"
    name: ingress-nginx-admission
    resourceVersion: "551"
    uid: cb949c3a-d20f-4847-82c1-e040e282c33b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: ingress-nginx-admission
  subjects:
  - kind: ServiceAccount
    name: ingress-nginx-admission
    namespace: ingress-nginx
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-12-29T05:30:55Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:roleRef: {}
        f:subjects: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:55Z"
    name: kubeadm:get-nodes
    resourceVersion: "218"
    uid: 182ae72c-6deb-49e9-993a-0465b8a9047f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kubeadm:get-nodes
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-12-29T05:30:56Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:roleRef: {}
        f:subjects: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:56Z"
    name: kubeadm:kubelet-bootstrap
    resourceVersion: "219"
    uid: a507ac1d-9485-4bc6-bc2b-6d6af6372fad
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-bootstrapper
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-12-29T05:30:56Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:roleRef: {}
        f:subjects: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:56Z"
    name: kubeadm:node-autoapprove-bootstrap
    resourceVersion: "220"
    uid: 7ffa42f9-b17a-4113-b503-e0668464e301
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-12-29T05:30:56Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:roleRef: {}
        f:subjects: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:56Z"
    name: kubeadm:node-autoapprove-certificate-rotation
    resourceVersion: "222"
    uid: fc1c5963-f388-40c9-b969-e89eb846fd03
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-12-29T05:30:57Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:roleRef: {}
        f:subjects: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:57Z"
    name: kubeadm:node-proxier
    resourceVersion: "243"
    uid: fdc891b5-07e5-43f9-ad5e-3c498b4a8cd2
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - kind: ServiceAccount
    name: kube-proxy
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kubernetes-dashboard","kubernetes.io/minikube-addons":"dashboard"},"name":"kubernetes-dashboard"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"cluster-admin"},"subjects":[{"kind":"ServiceAccount","name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"}]}
    creationTimestamp: "2024-12-29T05:32:55Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kubernetes-dashboard
      kubernetes.io/minikube-addons: dashboard
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:kubernetes.io/minikube-addons: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:32:55Z"
    name: kubernetes-dashboard
    resourceVersion: "461"
    uid: 4819ad2a-1eb8-466c-a1dc-8a05d4a8b348
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"metrics-server"},"name":"metrics-server:system:auth-delegator"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:auth-delegator"},"subjects":[{"kind":"ServiceAccount","name":"metrics-server","namespace":"kube-system"}]}
    creationTimestamp: "2024-12-29T05:34:41Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:34:41Z"
    name: metrics-server:system:auth-delegator
    resourceVersion: "746"
    uid: 31523e09-2e43-4c9c-8783-f96e822191aa
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:auth-delegator
  subjects:
  - kind: ServiceAccount
    name: metrics-server
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-12-29T05:30:57Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:roleRef: {}
        f:subjects: {}
      manager: kubectl-create
      operation: Update
      time: "2024-12-29T05:30:57Z"
    name: minikube-rbac
    resourceVersion: "253"
    uid: 3eed4ef6-1147-4549-870b-45fcef7fe446
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - kind: ServiceAccount
    name: default
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"EnsureExists"},"name":"storage-provisioner"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:persistent-volume-provisioner"},"subjects":[{"kind":"ServiceAccount","name":"storage-provisioner","namespace":"kube-system"}]}
    creationTimestamp: "2024-12-29T05:30:59Z"
    labels:
      addonmanager.kubernetes.io/mode: EnsureExists
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:30:59Z"
    name: storage-provisioner
    resourceVersion: "262"
    uid: c819dad9-d791-485c-a713-1abcf0bdabc8
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:persistent-volume-provisioner
  subjects:
  - kind: ServiceAccount
    name: storage-provisioner
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:basic-user
    resourceVersion: "137"
    uid: d797215b-3518-4c5b-b756-ccc21c53bb77
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:basic-user
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:attachdetach-controller
    resourceVersion: "146"
    uid: 9bd76309-9d43-4aa5-8934-c55c58e4db08
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:attachdetach-controller
  subjects:
  - kind: ServiceAccount
    name: attachdetach-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:certificate-controller
    resourceVersion: "172"
    uid: c6ac187f-9f6e-4d4e-b595-997fc112f8df
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:certificate-controller
  subjects:
  - kind: ServiceAccount
    name: certificate-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:clusterrole-aggregation-controller
    resourceVersion: "147"
    uid: a646750b-1457-4b36-a7cc-bef85a2b940e
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:clusterrole-aggregation-controller
  subjects:
  - kind: ServiceAccount
    name: clusterrole-aggregation-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:cronjob-controller
    resourceVersion: "148"
    uid: 78afee0f-190f-4581-add8-9a52710cf416
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:cronjob-controller
  subjects:
  - kind: ServiceAccount
    name: cronjob-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:daemon-set-controller
    resourceVersion: "149"
    uid: f904c8b2-3065-4793-995e-135da762faf6
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:daemon-set-controller
  subjects:
  - kind: ServiceAccount
    name: daemon-set-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:deployment-controller
    resourceVersion: "150"
    uid: 86cf04b4-e47e-4bf7-a163-59702d66cbb0
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:deployment-controller
  subjects:
  - kind: ServiceAccount
    name: deployment-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:disruption-controller
    resourceVersion: "151"
    uid: f8ff3814-c4b4-4c03-803a-b113c293f48c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:disruption-controller
  subjects:
  - kind: ServiceAccount
    name: disruption-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:endpoint-controller
    resourceVersion: "152"
    uid: 2743eb08-17fc-4c83-b074-10f0b180ce99
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpoint-controller
  subjects:
  - kind: ServiceAccount
    name: endpoint-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:endpointslice-controller
    resourceVersion: "153"
    uid: 63394c88-0cdc-43f3-aaaf-c1a7632f9ede
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpointslice-controller
  subjects:
  - kind: ServiceAccount
    name: endpointslice-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:endpointslicemirroring-controller
    resourceVersion: "154"
    uid: b68b928c-d9c8-4f89-bce6-76c08af7b6fd
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpointslicemirroring-controller
  subjects:
  - kind: ServiceAccount
    name: endpointslicemirroring-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:ephemeral-volume-controller
    resourceVersion: "156"
    uid: b8164ffa-7cb8-495c-a951-bceaf81aebdd
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ephemeral-volume-controller
  subjects:
  - kind: ServiceAccount
    name: ephemeral-volume-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:expand-controller
    resourceVersion: "155"
    uid: 8f1294c0-9420-4231-925e-e5a45673315c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:expand-controller
  subjects:
  - kind: ServiceAccount
    name: expand-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:generic-garbage-collector
    resourceVersion: "157"
    uid: 55bceb19-fd6b-4844-8aca-e2ee0f0130b8
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:generic-garbage-collector
  subjects:
  - kind: ServiceAccount
    name: generic-garbage-collector
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:horizontal-pod-autoscaler
    resourceVersion: "158"
    uid: f45f18f1-1876-4204-9dbc-099697d80305
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:horizontal-pod-autoscaler
  subjects:
  - kind: ServiceAccount
    name: horizontal-pod-autoscaler
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:job-controller
    resourceVersion: "159"
    uid: ad1d509b-4dd4-4796-b82a-44589d669194
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:job-controller
  subjects:
  - kind: ServiceAccount
    name: job-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:namespace-controller
    resourceVersion: "160"
    uid: 9ef6315a-df0f-4e97-90e7-684a360f37f4
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:namespace-controller
  subjects:
  - kind: ServiceAccount
    name: namespace-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:node-controller
    resourceVersion: "161"
    uid: 2b78e3bb-747d-4c56-90dc-c42c0b1ef648
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:node-controller
  subjects:
  - kind: ServiceAccount
    name: node-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:persistent-volume-binder
    resourceVersion: "162"
    uid: aee28145-39f2-4f34-92ae-bb55fd13a3bc
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:persistent-volume-binder
  subjects:
  - kind: ServiceAccount
    name: persistent-volume-binder
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:pod-garbage-collector
    resourceVersion: "163"
    uid: 7371be96-6392-4aa9-8c25-0863683524e1
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pod-garbage-collector
  subjects:
  - kind: ServiceAccount
    name: pod-garbage-collector
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:pv-protection-controller
    resourceVersion: "174"
    uid: 7c2df4ff-5280-4019-b898-93599d7607bf
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pv-protection-controller
  subjects:
  - kind: ServiceAccount
    name: pv-protection-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:pvc-protection-controller
    resourceVersion: "173"
    uid: 02f83991-c1df-4787-baf3-600b1a1a8ec2
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pvc-protection-controller
  subjects:
  - kind: ServiceAccount
    name: pvc-protection-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:replicaset-controller
    resourceVersion: "164"
    uid: 15629015-b019-40b2-a546-a0bfaabf32d9
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:replicaset-controller
  subjects:
  - kind: ServiceAccount
    name: replicaset-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:replication-controller
    resourceVersion: "165"
    uid: 6886bb30-18f9-4bf0-b640-606cb15a744f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:replication-controller
  subjects:
  - kind: ServiceAccount
    name: replication-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:resourcequota-controller
    resourceVersion: "166"
    uid: ebe34f6a-2348-4f99-9b28-8b32ca5b1ecb
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:resourcequota-controller
  subjects:
  - kind: ServiceAccount
    name: resourcequota-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:root-ca-cert-publisher
    resourceVersion: "176"
    uid: 0927bd2a-92e2-43f2-84cb-f4830f99c0a7
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:root-ca-cert-publisher
  subjects:
  - kind: ServiceAccount
    name: root-ca-cert-publisher
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:route-controller
    resourceVersion: "167"
    uid: da68a835-e850-4df1-8b9e-9979346e250c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:route-controller
  subjects:
  - kind: ServiceAccount
    name: route-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:service-account-controller
    resourceVersion: "168"
    uid: 8d495ab4-f730-4567-abaa-5103820dae38
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:service-account-controller
  subjects:
  - kind: ServiceAccount
    name: service-account-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:service-controller
    resourceVersion: "169"
    uid: 83ec3c6d-0e82-41ae-8cf0-9bfe372fc135
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:service-controller
  subjects:
  - kind: ServiceAccount
    name: service-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:statefulset-controller
    resourceVersion: "170"
    uid: 4923d121-3b45-4323-9b74-4c5bb07df66d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:statefulset-controller
  subjects:
  - kind: ServiceAccount
    name: statefulset-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:ttl-after-finished-controller
    resourceVersion: "175"
    uid: 307f7303-524b-4552-8348-b8592ab47f65
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ttl-after-finished-controller
  subjects:
  - kind: ServiceAccount
    name: ttl-after-finished-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:ttl-controller
    resourceVersion: "171"
    uid: 225c11f1-f80f-4308-9616-362884e73ab7
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ttl-controller
  subjects:
  - kind: ServiceAccount
    name: ttl-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-12-29T05:30:57Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:roleRef: {}
        f:subjects: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:57Z"
    name: system:coredns
    resourceVersion: "235"
    uid: 51d2d33c-718a-4f72-b34c-1ff39b0b4fe7
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:coredns
  subjects:
  - kind: ServiceAccount
    name: coredns
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:discovery
    resourceVersion: "136"
    uid: c3251121-99f8-4592-8e88-282ab3534394
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:discovery
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:kube-controller-manager
    resourceVersion: "140"
    uid: 7c35464b-ec5e-416b-b6e9-a7d8bee99931
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-controller-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:kube-dns
    resourceVersion: "141"
    uid: c05bfffe-7ab0-4357-b71c-3583830f8a5f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-dns
  subjects:
  - kind: ServiceAccount
    name: kube-dns
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:kube-scheduler
    resourceVersion: "142"
    uid: 54ef9067-c438-4428-8396-0e61f03ba219
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"metrics-server"},"name":"system:metrics-server"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:metrics-server"},"subjects":[{"kind":"ServiceAccount","name":"metrics-server","namespace":"kube-system"}]}
    creationTimestamp: "2024-12-29T05:34:41Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:34:41Z"
    name: system:metrics-server
    resourceVersion: "749"
    uid: 417fa926-239c-49f3-af94-8169c9f45f9a
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:metrics-server
  subjects:
  - kind: ServiceAccount
    name: metrics-server
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:monitoring
    resourceVersion: "135"
    uid: 80e06a87-d50f-454a-8ea7-032648015a13
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:monitoring
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:node
    resourceVersion: "144"
    uid: 91cbde40-e939-4bac-84a9-fb51f0fb3c1b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:node-proxier
    resourceVersion: "139"
    uid: 6fa118e7-e715-4839-87f1-63e543e16b7d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-proxy
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:53Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:53Z"
    name: system:public-info-viewer
    resourceVersion: "138"
    uid: a217f164-5d32-4a75-8374-a3b0e8a8b7c6
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:public-info-viewer
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:unauthenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:service-account-issuer-discovery
    resourceVersion: "145"
    uid: a106fd36-3cd1-4cc6-99b9-e2c85f4d9dd7
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:service-account-issuer-discovery
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:volume-scheduler
    resourceVersion: "143"
    uid: 6a08acab-34d1-49ec-9100-b7f2c63762b8
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:volume-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"name":"ingress-nginx","namespace":"ingress-nginx"},"rules":[{"apiGroups":[""],"resources":["namespaces"],"verbs":["get"]},{"apiGroups":[""],"resources":["configmaps","pods","secrets","endpoints"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["services"],"verbs":["get","list","watch"]},{"apiGroups":["networking.k8s.io"],"resources":["ingresses"],"verbs":["get","list","watch"]},{"apiGroups":["networking.k8s.io"],"resources":["ingresses/status"],"verbs":["update"]},{"apiGroups":["networking.k8s.io"],"resources":["ingressclasses"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resourceNames":["ingress-nginx-leader"],"resources":["configmaps"],"verbs":["get","update"]},{"apiGroups":[""],"resources":["configmaps"],"verbs":["create"]},{"apiGroups":["coordination.k8s.io"],"resourceNames":["ingress-nginx-leader"],"resources":["leases"],"verbs":["get","update"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create"]},{"apiGroups":[""],"resources":["events"],"verbs":["create","patch"]},{"apiGroups":["discovery.k8s.io"],"resources":["endpointslices"],"verbs":["list","watch","get"]}]}
    creationTimestamp: "2024-12-29T05:33:21Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:rules: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:33:21Z"
    name: ingress-nginx
    namespace: ingress-nginx
    resourceVersion: "544"
    uid: f39523c7-c415-48d0-b396-ed96ab7cd199
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - configmaps
    - pods
    - secrets
    - endpoints
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses/status
    verbs:
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingressclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - ingress-nginx-leader
    resources:
    - configmaps
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - ingress-nginx-leader
    resources:
    - leases
    verbs:
    - get
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"admission-webhook","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"name":"ingress-nginx-admission","namespace":"ingress-nginx"},"rules":[{"apiGroups":[""],"resources":["secrets"],"verbs":["get","create"]}]}
    creationTimestamp: "2024-12-29T05:33:21Z"
    labels:
      app.kubernetes.io/component: admission-webhook
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:rules: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:33:21Z"
    name: ingress-nginx-admission
    namespace: ingress-nginx
    resourceVersion: "545"
    uid: 0c18d7af-5cbb-4f6f-b2ed-ddc2192f9a9b
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: "2024-12-29T05:30:57Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:rules: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:57Z"
    name: kubeadm:bootstrap-signer-clusterinfo
    namespace: kube-public
    resourceVersion: "224"
    uid: 1bd16862-f05a-4c7a-b74b-658c1211c437
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - cluster-info
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:bootstrap-signer
    namespace: kube-public
    resourceVersion: "183"
    uid: 5fdc51f3-2c74-4e37-9a96-5af04bb887f9
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - cluster-info
    resources:
    - configmaps
    verbs:
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: extension-apiserver-authentication-reader
    namespace: kube-system
    resourceVersion: "177"
    uid: 36569903-69a3-4893-9a17-3606d3e8736b
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - extension-apiserver-authentication
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: "2024-12-29T05:30:57Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:rules: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:57Z"
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "244"
    uid: 9356a27f-a3f0-4bce-8874-f5447d127b84
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - kube-proxy
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: "2024-12-29T05:30:54Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:rules: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: kubeadm:kubelet-config
    namespace: kube-system
    resourceVersion: "207"
    uid: 9bad2281-45db-4e49-a616-30954f83fb84
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - kubelet-config
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: "2024-12-29T05:30:54Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:rules: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: kubeadm:nodes-kubeadm-config
    namespace: kube-system
    resourceVersion: "204"
    uid: 7f41e630-6472-48f6-a07b-0ab727362d47
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - kubeadm-config
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system::leader-locking-kube-controller-manager
    namespace: kube-system
    resourceVersion: "181"
    uid: 01a9f797-a636-403c-ada0-cede7f91c9a5
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - kube-controller-manager
    resources:
    - configmaps
    verbs:
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system::leader-locking-kube-scheduler
    namespace: kube-system
    resourceVersion: "182"
    uid: 203041b9-4544-4431-83de-74aa606af917
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - kube-scheduler
    resources:
    - configmaps
    verbs:
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:bootstrap-signer
    namespace: kube-system
    resourceVersion: "178"
    uid: 027ae6d9-e9a9-4ca2-88bd-a62f31f20726
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:cloud-provider
    namespace: kube-system
    resourceVersion: "179"
    uid: 014333e3-0edb-4a9f-9863-c7871607fab9
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:rules: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:token-cleaner
    namespace: kube-system
    resourceVersion: "180"
    uid: 707450b5-7e3e-42e3-955a-3cbd3cee5bc6
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"EnsureExists"},"name":"system:persistent-volume-provisioner","namespace":"kube-system"},"rules":[{"apiGroups":[""],"resources":["endpoints"],"verbs":["watch","create"]},{"apiGroups":[""],"resourceNames":["k8s.io-minikube-hostpath"],"resources":["endpoints"],"verbs":["get","update","create"]}]}
    creationTimestamp: "2024-12-29T05:30:59Z"
    labels:
      addonmanager.kubernetes.io/mode: EnsureExists
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
        f:rules: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:30:59Z"
    name: system:persistent-volume-provisioner
    namespace: kube-system
    resourceVersion: "263"
    uid: aefaac6c-ecc2-47f6-aef7-d9344b4c0322
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - watch
    - create
  - apiGroups:
    - ""
    resourceNames:
    - k8s.io-minikube-hostpath
    resources:
    - endpoints
    verbs:
    - get
    - update
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kubernetes-dashboard","kubernetes.io/minikube-addons":"dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"rules":[{"apiGroups":[""],"resourceNames":["kubernetes-dashboard-key-holder","kubernetes-dashboard-certs","kubernetes-dashboard-csrf"],"resources":["secrets"],"verbs":["get","update","delete"]},{"apiGroups":[""],"resourceNames":["kubernetes-dashboard-settings"],"resources":["configmaps"],"verbs":["get","update"]},{"apiGroups":[""],"resourceNames":["heapster","dashboard-metrics-scraper"],"resources":["services"],"verbs":["proxy"]},{"apiGroups":[""],"resourceNames":["heapster","http:heapster:","https:heapster:","dashboard-metrics-scraper","http:dashboard-metrics-scraper"],"resources":["services/proxy"],"verbs":["get"]}]}
    creationTimestamp: "2024-12-29T05:32:55Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kubernetes-dashboard
      kubernetes.io/minikube-addons: dashboard
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:kubernetes.io/minikube-addons: {}
        f:rules: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:32:55Z"
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "474"
    uid: d5b1f338-5c8d-481d-94b5-cfcc67629057
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - kubernetes-dashboard-key-holder
    - kubernetes-dashboard-certs
    - kubernetes-dashboard-csrf
    resources:
    - secrets
    verbs:
    - get
    - update
    - delete
  - apiGroups:
    - ""
    resourceNames:
    - kubernetes-dashboard-settings
    resources:
    - configmaps
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resourceNames:
    - heapster
    - dashboard-metrics-scraper
    resources:
    - services
    verbs:
    - proxy
  - apiGroups:
    - ""
    resourceNames:
    - heapster
    - 'http:heapster:'
    - 'https:heapster:'
    - dashboard-metrics-scraper
    - http:dashboard-metrics-scraper
    resources:
    - services/proxy
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"name":"ingress-nginx","namespace":"ingress-nginx"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"ingress-nginx"},"subjects":[{"kind":"ServiceAccount","name":"ingress-nginx","namespace":"ingress-nginx"}]}
    creationTimestamp: "2024-12-29T05:33:21Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:33:21Z"
    name: ingress-nginx
    namespace: ingress-nginx
    resourceVersion: "548"
    uid: a7b100e6-0612-449b-91fb-646834a646e8
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: ingress-nginx
  subjects:
  - kind: ServiceAccount
    name: ingress-nginx
    namespace: ingress-nginx
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"admission-webhook","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"name":"ingress-nginx-admission","namespace":"ingress-nginx"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"ingress-nginx-admission"},"subjects":[{"kind":"ServiceAccount","name":"ingress-nginx-admission","namespace":"ingress-nginx"}]}
    creationTimestamp: "2024-12-29T05:33:21Z"
    labels:
      app.kubernetes.io/component: admission-webhook
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:33:21Z"
    name: ingress-nginx-admission
    namespace: ingress-nginx
    resourceVersion: "549"
    uid: 3ab023a4-fda5-4a85-a090-9b34f29707d3
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: ingress-nginx-admission
  subjects:
  - kind: ServiceAccount
    name: ingress-nginx-admission
    namespace: ingress-nginx
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: "2024-12-29T05:30:57Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:roleRef: {}
        f:subjects: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:57Z"
    name: kubeadm:bootstrap-signer-clusterinfo
    namespace: kube-public
    resourceVersion: "226"
    uid: d32499e2-ffc8-480f-a448-00c40b29f1de
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kubeadm:bootstrap-signer-clusterinfo
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:anonymous
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:bootstrap-signer
    namespace: kube-public
    resourceVersion: "184"
    uid: 514dcc97-7a06-4af0-8ff2-786dfd9dbe82
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:bootstrap-signer
  subjects:
  - kind: ServiceAccount
    name: bootstrap-signer
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: "2024-12-29T05:30:57Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:roleRef: {}
        f:subjects: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:57Z"
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "245"
    uid: b3af6a76-8383-44f7-88f1-fa9f9c4949f4
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kube-proxy
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: "2024-12-29T05:30:54Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:roleRef: {}
        f:subjects: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: kubeadm:kubelet-config
    namespace: kube-system
    resourceVersion: "208"
    uid: 60a8e184-03d3-4fa2-aea7-f27584bfc880
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kubeadm:kubelet-config
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: "2024-12-29T05:30:54Z"
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:roleRef: {}
        f:subjects: {}
      manager: kubeadm
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: kubeadm:nodes-kubeadm-config
    namespace: kube-system
    resourceVersion: "205"
    uid: 23bddeb2-d8fe-4628-b613-8f13478b8727
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kubeadm:nodes-kubeadm-config
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"metrics-server"},"name":"metrics-server-auth-reader","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"extension-apiserver-authentication-reader"},"subjects":[{"kind":"ServiceAccount","name":"metrics-server","namespace":"kube-system"}]}
    creationTimestamp: "2024-12-29T05:34:41Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:34:41Z"
    name: metrics-server-auth-reader
    namespace: kube-system
    resourceVersion: "742"
    uid: 52039ca8-28fe-4ea0-ad8f-765aa57e17fd
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: extension-apiserver-authentication-reader
  subjects:
  - kind: ServiceAccount
    name: metrics-server
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system::extension-apiserver-authentication-reader
    namespace: kube-system
    resourceVersion: "185"
    uid: 0766c009-de9f-4a40-8867-9173af55cb9e
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: extension-apiserver-authentication-reader
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system::leader-locking-kube-controller-manager
    namespace: kube-system
    resourceVersion: "186"
    uid: 0a2beae5-6ac1-4d07-bdcb-4bfe473496e9
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system::leader-locking-kube-controller-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
  - kind: ServiceAccount
    name: kube-controller-manager
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system::leader-locking-kube-scheduler
    namespace: kube-system
    resourceVersion: "187"
    uid: 6c76896b-85ad-4973-a7a6-b4bbdd33b954
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system::leader-locking-kube-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
  - kind: ServiceAccount
    name: kube-scheduler
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:bootstrap-signer
    namespace: kube-system
    resourceVersion: "188"
    uid: 02febc1b-6404-445c-893a-5b6a586df5c7
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:bootstrap-signer
  subjects:
  - kind: ServiceAccount
    name: bootstrap-signer
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:cloud-provider
    namespace: kube-system
    resourceVersion: "189"
    uid: f07111d2-8df7-4cc3-9d46-1760d5cfa240
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:cloud-provider
  subjects:
  - kind: ServiceAccount
    name: cloud-provider
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-12-29T05:30:54Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:rbac.authorization.kubernetes.io/autoupdate: {}
          f:labels:
            .: {}
            f:kubernetes.io/bootstrapping: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kube-apiserver
      operation: Update
      time: "2024-12-29T05:30:54Z"
    name: system:controller:token-cleaner
    namespace: kube-system
    resourceVersion: "190"
    uid: d1cf4298-2b38-4737-9058-f4d09f6adc41
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:token-cleaner
  subjects:
  - kind: ServiceAccount
    name: token-cleaner
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"EnsureExists"},"name":"system:persistent-volume-provisioner","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"system:persistent-volume-provisioner"},"subjects":[{"kind":"ServiceAccount","name":"storage-provisioner","namespace":"kube-system"}]}
    creationTimestamp: "2024-12-29T05:30:59Z"
    labels:
      addonmanager.kubernetes.io/mode: EnsureExists
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:30:59Z"
    name: system:persistent-volume-provisioner
    namespace: kube-system
    resourceVersion: "264"
    uid: bbca7e27-fd59-4725-9755-55c02f77558a
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:persistent-volume-provisioner
  subjects:
  - kind: ServiceAccount
    name: storage-provisioner
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kubernetes-dashboard","kubernetes.io/minikube-addons":"dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"kubernetes-dashboard"},"subjects":[{"kind":"ServiceAccount","name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"}]}
    creationTimestamp: "2024-12-29T05:32:55Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kubernetes-dashboard
      kubernetes.io/minikube-addons: dashboard
    managedFields:
    - apiVersion: rbac.authorization.k8s.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:kubernetes.io/minikube-addons: {}
        f:roleRef: {}
        f:subjects: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:32:55Z"
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "480"
    uid: 35a556b7-cd82-4416-8cad-4f41f1727e5d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kubernetes-dashboard
  subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:09Z"
    name: default
    namespace: default
    resourceVersion: "336"
    uid: 904e6180-bd60-4f23-9268-c0b67812feab
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:33:21Z"
    name: default
    namespace: ingress-nginx
    resourceVersion: "540"
    uid: 6eae6990-bc70-448c-bf84-19f26a0048db
- apiVersion: v1
  automountServiceAccountToken: true
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","automountServiceAccountToken":true,"kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"name":"ingress-nginx","namespace":"ingress-nginx"}}
    creationTimestamp: "2024-12-29T05:33:21Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:automountServiceAccountToken: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:33:21Z"
    name: ingress-nginx
    namespace: ingress-nginx
    resourceVersion: "542"
    uid: 8715bd6c-db1d-4951-8a9a-96fd8cde9adc
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"admission-webhook","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"name":"ingress-nginx-admission","namespace":"ingress-nginx"}}
    creationTimestamp: "2024-12-29T05:33:21Z"
    labels:
      app.kubernetes.io/component: admission-webhook
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:33:21Z"
    name: ingress-nginx-admission
    namespace: ingress-nginx
    resourceVersion: "543"
    uid: 24e4ccb9-f42a-4997-a18e-8aecd63b6d21
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:09Z"
    name: default
    namespace: kube-node-lease
    resourceVersion: "335"
    uid: 055192d8-f42f-4a66-8ea1-71d9501a6439
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:08Z"
    name: default
    namespace: kube-public
    resourceVersion: "334"
    uid: 0e871805-0aeb-4123-99b7-8fd772ef14b6
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:04Z"
    name: attachdetach-controller
    namespace: kube-system
    resourceVersion: "276"
    uid: d2513511-bea5-47e7-96c4-ccccd214ea45
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:08Z"
    name: bootstrap-signer
    namespace: kube-system
    resourceVersion: "311"
    uid: 5cab49e7-5ac4-4735-a5c2-c97f35a2e32a
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:06Z"
    name: certificate-controller
    namespace: kube-system
    resourceVersion: "296"
    uid: a16147ca-eb60-4141-8a71-8da992be89ad
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:04Z"
    name: clusterrole-aggregation-controller
    namespace: kube-system
    resourceVersion: "285"
    uid: 44e23cc6-035c-4b39-9e60-b4a2026b5e94
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:30:57Z"
    name: coredns
    namespace: kube-system
    resourceVersion: "236"
    uid: 1d541e52-e68a-4733-98ad-e23c2fa92a15
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:07Z"
    name: cronjob-controller
    namespace: kube-system
    resourceVersion: "309"
    uid: 1d74f11f-a791-45d7-b90b-a4ccb2246dd2
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:04Z"
    name: daemon-set-controller
    namespace: kube-system
    resourceVersion: "282"
    uid: 7c5e4f64-3985-46a3-b674-f736bcb7c0e5
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:09Z"
    name: default
    namespace: kube-system
    resourceVersion: "337"
    uid: 36939e5d-57ba-4670-ab39-8411dd0031b8
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:05Z"
    name: deployment-controller
    namespace: kube-system
    resourceVersion: "288"
    uid: 6b6ddc81-5985-44f4-bfc6-662a59a34fed
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:05Z"
    name: disruption-controller
    namespace: kube-system
    resourceVersion: "289"
    uid: 608673b9-ab65-412f-8c07-5d93baa7517e
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:07Z"
    name: endpoint-controller
    namespace: kube-system
    resourceVersion: "304"
    uid: 274defbd-b239-411a-a871-95a9ba2d4c68
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:07Z"
    name: endpointslice-controller
    namespace: kube-system
    resourceVersion: "305"
    uid: bb928523-9638-4c4f-9dd2-65d60aad6065
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:04Z"
    name: endpointslicemirroring-controller
    namespace: kube-system
    resourceVersion: "286"
    uid: 1c1c14a7-05b7-4bc9-b074-81a1ebb981dd
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:07Z"
    name: ephemeral-volume-controller
    namespace: kube-system
    resourceVersion: "303"
    uid: d8caa590-5936-477f-bfb2-9d69797360c3
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:06Z"
    name: expand-controller
    namespace: kube-system
    resourceVersion: "301"
    uid: 19a78e85-cf60-4c52-b6ac-890235e80da8
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:07Z"
    name: generic-garbage-collector
    namespace: kube-system
    resourceVersion: "306"
    uid: a707daa2-54c3-4d6a-8fd1-67cfdeb79b67
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:06Z"
    name: horizontal-pod-autoscaler
    namespace: kube-system
    resourceVersion: "295"
    uid: 5b434fdd-4899-42b7-8c4c-38515a883c77
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:30:54Z"
    name: job-controller
    namespace: kube-system
    resourceVersion: "198"
    uid: 8014de44-49e0-4b52-a826-f6c180844eb5
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:30:57Z"
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "242"
    uid: 70696228-5e09-4994-8973-34ca46882652
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"metrics-server"},"name":"metrics-server","namespace":"kube-system"}}
    creationTimestamp: "2024-12-29T05:34:41Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:34:41Z"
    name: metrics-server
    namespace: kube-system
    resourceVersion: "729"
    uid: fed0fce6-ce5b-4908-b77d-011d19e3eaca
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:04Z"
    name: namespace-controller
    namespace: kube-system
    resourceVersion: "281"
    uid: 92457598-4eb5-4a77-b814-d31c43c17c49
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:30:54Z"
    name: node-controller
    namespace: kube-system
    resourceVersion: "201"
    uid: 3425acf2-b5d7-46ae-ac0b-380d1d69c7ad
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:06Z"
    name: persistent-volume-binder
    namespace: kube-system
    resourceVersion: "297"
    uid: f7921f8a-166d-423c-967c-2aed13fd89f3
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:05Z"
    name: pod-garbage-collector
    namespace: kube-system
    resourceVersion: "287"
    uid: c0ebc984-d32c-4c1a-995e-9ec77daea660
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:04Z"
    name: pv-protection-controller
    namespace: kube-system
    resourceVersion: "284"
    uid: 052cab97-9f13-4849-be15-f18982630616
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:04Z"
    name: pvc-protection-controller
    namespace: kube-system
    resourceVersion: "280"
    uid: b0f12789-024f-4aa6-9e8e-31782317ff1e
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:30:54Z"
    name: replicaset-controller
    namespace: kube-system
    resourceVersion: "199"
    uid: 2f731df6-9614-47de-897c-9421ca3b8a78
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:04Z"
    name: replication-controller
    namespace: kube-system
    resourceVersion: "277"
    uid: 98fbb92e-2def-4642-90cf-6dc60dbb0e14
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:05Z"
    name: resourcequota-controller
    namespace: kube-system
    resourceVersion: "291"
    uid: edd380bc-9e23-4d25-a478-4c5f4c493d19
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:08Z"
    name: root-ca-cert-publisher
    namespace: kube-system
    resourceVersion: "312"
    uid: a5fbb22c-7783-4de6-8509-f63d5703a64e
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:04Z"
    name: service-account-controller
    namespace: kube-system
    resourceVersion: "278"
    uid: 4d94d275-4889-4372-b482-38d0952fd1c9
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:05Z"
    name: service-controller
    namespace: kube-system
    resourceVersion: "290"
    uid: 8cb0d9e3-baa4-4d66-9a3c-040abb38161d
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:04Z"
    name: statefulset-controller
    namespace: kube-system
    resourceVersion: "279"
    uid: b11d9576-cadb-4a99-adfc-0f3d2fe1f8f5
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile"},"name":"storage-provisioner","namespace":"kube-system"}}
    creationTimestamp: "2024-12-29T05:30:59Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:30:59Z"
    name: storage-provisioner
    namespace: kube-system
    resourceVersion: "261"
    uid: 5d161da8-d8a3-4ca8-a440-bf99855e2784
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:30:54Z"
    name: token-cleaner
    namespace: kube-system
    resourceVersion: "200"
    uid: 8f984d36-e2bc-4394-9003-40a972f1c079
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:06Z"
    name: ttl-after-finished-controller
    namespace: kube-system
    resourceVersion: "298"
    uid: 3cc699dd-3949-4543-84a6-a49cd91a58f7
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:31:04Z"
    name: ttl-controller
    namespace: kube-system
    resourceVersion: "283"
    uid: 0fdec00c-fc46-44e6-a329-0bb0a514323f
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-12-29T05:32:55Z"
    name: default
    namespace: kubernetes-dashboard
    resourceVersion: "458"
    uid: 6986fd7f-ae71-4ea8-9c38-4f6302d01db2
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kubernetes-dashboard","kubernetes.io/minikube-addons":"dashboard"},"name":"kubernetes-dashboard","namespace":"kubernetes-dashboard"}}
    creationTimestamp: "2024-12-29T05:32:55Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kubernetes-dashboard
      kubernetes.io/minikube-addons: dashboard
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:addonmanager.kubernetes.io/mode: {}
            f:k8s-app: {}
            f:kubernetes.io/minikube-addons: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-12-29T05:32:55Z"
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    resourceVersion: "483"
    uid: 4973466f-8416-43b8-8b5a-5dbd2a0626b2
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
