#
# Following defines some API server plugins.
#

kind: APIService
apiVersion: apiregistration.k8s.io/v1
metadata:
  name : api-service
  labels:
    api-server-plugin:
spec:
  service:
    name: service
    namespace: api-service

---

kind: Service
apiVersion: v1
metadata:
  name : service
  namespace: api-service
spec:
  ports:
    - port: 43210
  selector:
    pod: api-service-pod

---

kind: Pod
apiVersion: v1
metadata:
  name: pod
  namespace: api-service
  labels:
    pod: api-service-pod
spec:
  serviceAccountName: service-account
  nodeName: minikube

---

kind: VerticalPodAutoscaler
apiVersion: autoscaling.k8s.io/v1
metadata:
  name: vpa
  namespace: api-service
spec:
  targetRef:
    name: pod
    kind: Pod
    apiVersion: v1

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name : service-account
  namespace: api-service

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: role
  namespace: api-service
  labels:
    rbac: API Service

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: role-binding
  namespace: api-service
  labels:
    rbac: API Service
roleRef:
  name: role
  kind: Role
subjects:
  - name: service-account
    kind: ServiceAccount
    apiVersion: v1
  
---

kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1
metadata:
  name : custom-resource-definition
  labels:
    api-server-plugin:

---

kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: validating-webhook-configuration
  labels:
    api-server-plugin:
webhooks:
  - clientConfig:
      service:
        name: service
        namespace: operator

---

kind: MutatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: mwc
  labels:
    api-server-plugin:
webhooks:
  - clientConfig:
      service:
        name: service
        namespace: operator

---

kind: Service
apiVersion: v1
metadata:
  name : service
  namespace: operator
spec:
  ports:
    - port: 56789
  selector:
    pod: operator-pod

---

kind: Pod
apiVersion: v1
metadata:
  name: pod
  namespace: operator
  labels:
    pod: operator-pod
spec:
  serviceAccountName: service-account
  nodeName: minikube
  priorityClassName: priority-class
  runtimeClassName: runtime-class

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name : service-account
  namespace: operator

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: role
  namespace: operator
  labels:
    rbac: Operator

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: role-binding
  namespace: operator
  labels:
    rbac: Operator
roleRef:
  name: role
  kind: Role
subjects:
  - name: service-account
    kind: ServiceAccount
    apiVersion: v1

---

#
# Following defines some cluster compute service resources.
#

kind: Node
apiVersion: v1
metadata:
  name: minikube
  labels:
    cluster-service: Compute
  uid: b8b1c5e1-cd8e-4514-b95a-f2005a1f80b6

---

kind: Node
apiVersion: v1
metadata:
  name: minikube-1
  labels:
    cluster-service: Compute

---

kind: Node
apiVersion: v1
metadata:
  name: minikube-2
  labels:
    cluster-service: Compute

---

kind: PriorityClass
apiVersion: scheduling.k8s.io/v1
metadata:
  name: priority-class
  labels:
    cluster-service: Compute

---

kind: RuntimeClass
apiVersion: node.k8s.io/v1
metadata:
  name: runtime-class
  labels:
    cluster-service: Compute

---

#
# Following defines some cluster storage service resources.
#

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: storage-class
  labels:
    cluster-service: Storage
provisioner: csi-driver

---

kind: CSIDriver
apiVersion: storage.k8s.io/v1
metadata:
  name : csi-driver
  labels:
    cluster-service: Storage

---

kind: CSINode
apiVersion: storage.k8s.io/v1
metadata:
  name : csi-node
  labels:
    cluster-service: Storage
  ownerReferences:
    - apiVersion: v1
      kind: Node
      name: minikube
      uid: b8b1c5e1-cd8e-4514-b95a-f2005a1f80b6
spec:
  drivers:
    - name: csi-driver

---

kind: CSIStorageCapacity
apiVersion: storage.k8s.io/v1
metadata:
  name: csi-storage-capacity
  namespace: statefulset
  labels:
    cluster-service: Storage
    release: statefulset-workload
    chart: statefulset-workload-1.0.0
    app: statefulset-workload
storageClassName: storage-class

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-0
  labels:
    cluster-service: Storage
spec:
  storageClassName: storage-class

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-1
  labels:
    cluster-service: Storage
spec:
  storageClassName: storage-class

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-2
  labels:
    cluster-service: Storage
spec:
  storageClassName: storage-class

---

kind: VolumeAttachment
apiVersion: storage.k8s.io/v1
metadata:
  name: volume-attachment
  labels:
    cluster-service: Storage
spec:
  nodeName: minikube

---

#
# Following defines some cluster storage network resources.
#

kind: IngressClass
apiVersion: networking.k8s.io/v1
metadata:
  name: ingress-class
  labels:
    cluster-service: Network

---

#
# Following defines cluster RBAC resources
#

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name : cluster-role
  labels:
    rbac: Cluster
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        role: role

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name : another-cluster-role
  labels:
    role: role
    rbac: Cluster

---

kind: User
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: user
  labels:
    rbac: Cluster

---

kind: Group
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: group
  labels:
    rbac: Cluster

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name : cluster-role-binding
  labels:
    rbac: Cluster
roleRef:
  name: cluster-role
  kind: ClusterRole
subjects:
  - name: service-account
    namespace: api-service
    kind: ServiceAccount
    apiVersion: v1
  - name: service-account
    namespace: operator
    kind: ServiceAccount
    apiVersion: v1
  - name: group
    kind: Group
    apiVersion: rbac.authorization.k8s.io/v1
  - name: user
    kind: User
    apiVersion: rbac.authorization.k8s.io/v1

---

#
# Following defines some namespace policies.
#

kind: Namespace
apiVersion: v1
metadata:
  name: default

---

kind: LimitRange
apiVersion: v1
metadata:
  name: limit-range
  namespace: default
  labels:
    namespace-policy:

---

kind: PodSecurityPolicy
apiVersion: policy/v1
metadata:
  name: pod-security-policy
  namespace: default
  labels:
    namespace-policy:

---

kind: ResourceQuota
apiVersion: v1
metadata:
  name: resource-quota
  namespace: default
  labels:
    namespace-policy:

---

#
# Following defines a CronJob workload.
#

kind: CronJob
apiVersion: batch/v1
metadata:
  name : cron-job
  namespace: cronjob
  uid: cron-job-uid
  labels:
    app.kubernetes.io/instance: cronjob-workload
    helm.sh/chart: cronjob-workload-1.0.0
    app.kubernetes.io/name: cronjob-workload

---

kind: Job
apiVersion: batch/v1
metadata:
  name: cron-job-123456789
  namespace: cronjob
  labels:
    app.kubernetes.io/instance: cronjob-workload
    helm.sh/chart: cronjob-workload-1.0.0
    app.kubernetes.io/name: cronjob-workload
  ownerReferences:
    - uid: cron-job-uid
  uid: cron-job-123456789-uid

---

kind: Pod
apiVersion: v1
metadata:
  name: cron-job-123456789-abcde
  namespace: cronjob
  labels:
    app.kubernetes.io/instance: cronjob-workload
    helm.sh/chart: cronjob-workload-1.0.0
    app.kubernetes.io/name: cronjob-workload
  ownerReferences:
    - uid: cron-job-123456789-uid
spec:
  volumes:
    - name: config-map
      configMap:
        name: config-map
  nodeName: minikube

---

kind: Job
apiVersion: batch/v1
metadata:
  name: cron-job-123456790
  namespace: cronjob
  labels:
    app.kubernetes.io/instance: cronjob-workload
    helm.sh/chart: cronjob-workload-1.0.0
    app.kubernetes.io/name: cronjob-workload
  ownerReferences:
    - uid: cron-job-uid
  uid: cron-job-123456790-uid

---

kind: Pod
apiVersion: v1
metadata:
  name: cron-job-123456790-acbed
  namespace: cronjob
  labels:
    app.kubernetes.io/instance: cronjob-workload
    helm.sh/chart: cronjob-workload-1.0.0
    app.kubernetes.io/name: cronjob-workload
  ownerReferences:
    - uid: cron-job-123456790-uid
spec:
  volumes:
    - name: config-map
      configMap:
        name: config-map
  nodeName: minikube

---

kind: Job
apiVersion: batch/v1
metadata:
  name: cron-job-123456791
  namespace: cronjob
  labels:
    app.kubernetes.io/instance: cronjob-workload
    helm.sh/chart: cronjob-workload-1.0.0
    app.kubernetes.io/name: cronjob-workload
  ownerReferences:
    - uid: cron-job-uid
  uid: cron-job-123456791-uid

---

kind: Pod
apiVersion: v1
metadata:
  name: cron-job-123456791-fghij
  namespace: cronjob
  labels:
    app.kubernetes.io/instance: cronjob-workload
    helm.sh/chart: cronjob-workload-1.0.0
    app.kubernetes.io/name: cronjob-workload
  ownerReferences:
    - uid: cron-job-123456791-uid
spec:
  volumes:
    - name: config-map
      configMap:
        name: config-map
  nodeName: minikube

---

kind: ConfigMap
apiVersion: v1
metadata:
  name : config-map
  namespace: cronjob
  labels:
    app.kubernetes.io/instance: cronjob-workload
    helm.sh/chart: cronjob-workload-1.0.0
    app.kubernetes.io/name: cronjob-workload

---

#
#
# Following defines a StatefulSet workload.
#

kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: stateful-set
  namespace: statefulset
  uid: stateful-set-uid
  labels:
    release: statefulset-workload
    chart: statefulset-workload-1.0.0
    app: statefulset-workload
spec:
  serviceName: statefulset-workload

---

apiVersion: v1
kind: Service
metadata:
  name: statefulset-workload
  namespace: statefulset
  labels:
    release: statefulset-workload
    chart: statefulset-workload-1.0.0
    app: statefulset-workload
spec:
  ports:
  - port: 9042
  selector:
    release: statefulset-workload
    chart: statefulset-workload-1.0.0
    app: statefulset-workload

---

kind: Pod
apiVersion: v1
metadata:
  name: statefulset-workload-0
  namespace: statefulset
  labels:
    release: statefulset-workload
    chart: statefulset-workload-1.0.0
    app: statefulset-workload
  ownerReferences:
    - uid: stateful-set-uid
spec:
  volumes:
    - persistentVolumeClaim:
        claimName: statefulset-workload-data-statefulset-workload-0
  nodeName: minikube

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: statefulset-workload-data-statefulset-workload-0
  namespace: statefulset
  labels:
    release: statefulset-workload
    chart: statefulset-workload-1.0.0
    app: statefulset-workload
spec:
#  storageClassName: storage-class
  volumeName: pv-0

---

kind: Pod
apiVersion: v1
metadata:
  name: statefulset-workload-1
  namespace: statefulset
  labels:
    release: statefulset-workload
    chart: statefulset-workload-1.0.0
    app: statefulset-workload
  ownerReferences:
    - uid: stateful-set-uid
spec:
  volumes:
    - persistentVolumeClaim:
        claimName: statefulset-workload-data-statefulset-workload-1
  nodeName: minikube-1

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: statefulset-workload-data-statefulset-workload-1
  namespace: statefulset
  labels:
    release: statefulset-workload
    chart: statefulset-workload-1.0.0
    app: statefulset-workload
spec:
#  storageClassName: storage-class
  volumeName: pv-1

---

kind: Pod
apiVersion: v1
metadata:
  name: statefulset-workload-2
  namespace: statefulset
  labels:
    release: statefulset-workload
    chart: statefulset-workload-1.0.0
    app: statefulset-workload
  ownerReferences:
    - uid: stateful-set-uid
spec:
  volumes:
    - persistentVolumeClaim:
        claimName: statefulset-workload-data-statefulset-workload-2
  nodeName: minikube-2

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: statefulset-workload-data-statefulset-workload-2
  namespace: statefulset
  labels:
    release: statefulset-workload
    chart: statefulset-workload-1.0.0
    app: statefulset-workload
spec:
#  storageClassName: storage-class
  volumeName: pv-2

---

#
# Following defines a deployment workload.
#

kind: Deployment
apiVersion: apps/v1
metadata:
  name: deployment
  namespace: deployment
  uid: deployment-uid
  labels:
    release: deployment-workload
    chart: deployment-workload-1.0.0
    app: deployment-workload

---

kind: HorizontalPodAutoscaler
apiVersion: autoscaling/v1
metadata:
  name: hpa
  namespace: deployment
  labels:
    release: deployment-workload
    chart: deployment-workload-1.0.0
    app: deployment-workload
spec:
  scaleTargetRef:
    name: deployment
    kind: Deployment
    apiVersion: apps/v1

---

kind: ReplicaSet
apiVersion: apps/v1
metadata:
  name: replica-set
  namespace: deployment
  labels:
    release: deployment-workload
    chart: deployment-workload-1.0.0
    app: deployment-workload
  ownerReferences:
    - uid: deployment-uid
  uid: replica-set-uid

---

kind: Pod
apiVersion: v1
metadata:
  name: deployment-workload-0
  namespace: deployment
  labels:
    release: deployment-workload
    chart: deployment-workload-1.0.0
    app: deployment-workload
  ownerReferences:
    - uid: replica-set-uid
spec:
  volumes:
    - secret:
        secretName: secret
  nodeName: minikube

---

kind: Pod
apiVersion: v1
metadata:
  name: deployment-workload-1
  namespace: deployment
  labels:
    release: deployment-workload
    chart: deployment-workload-1.0.0
    app: deployment-workload
  ownerReferences:
    - uid: replica-set-uid
spec:
  volumes:
    - secret:
        secretName: secret
  nodeName: minikube

---

kind: Pod
apiVersion: v1
metadata:
  name: deployment-workload-2
  namespace: deployment
  labels:
    release: deployment-workload
    chart: deployment-workload-1.0.0
    app: deployment-workload
  ownerReferences:
    - uid: replica-set-uid
spec:
  volumes:
    - secret:
        secretName: secret
  nodeName: minikube

---

kind: Secret
apiVersion: v1
metadata:
  name : secret
  namespace: deployment
  labels:
    release: deployment-workload
    chart: deployment-workload-1.0.0
    app: deployment-workload

---

kind: Lease
apiVersion: coordination.k8s.io/v1
metadata:
  name: lease
  namespace: deployment
  labels:
    release: deployment-workload
    chart: deployment-workload-1.0.0
    app: deployment-workload

---

#
# Following defines a daemonset workload.
#

kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: daemon-set
  namespace: daemon-set
  uid: daemon-set-uid
  labels:
    release: daemon-set
    chart: daemon-set-1.0.0
    app: daemon-set

---

kind: Pod
apiVersion: v1
metadata:
  name: daemon-pod-0
  namespace: daemon-set
  labels:
    release: daemon-set
    chart: daemon-set-1.0.0
    app: daemon-set
  ownerReferences:
    - uid: daemon-set-uid
spec:
  nodeName: minikube

---

kind: Pod
apiVersion: v1
metadata:
  name: daemon-pod-1
  namespace: daemon-set
  labels:
    release: daemon-set
    chart: daemon-set-1.0.0
    app: daemon-set
  ownerReferences:
    - uid: daemon-set-uid
spec:
  nodeName: minikube-1

---

kind: Pod
apiVersion: v1
metadata:
  name: daemon-pod-2
  namespace: daemon-set
  labels:
    release: daemon-set
    chart: daemon-set-1.0.0
    app: daemon-set
  ownerReferences:
    - uid: daemon-set-uid
spec:
  nodeName: minikube-2

---

kind: PodDisruptionBudget
apiVersion: policy/v1
metadata:
  name: pod-disruption-budget
  namespace: daemon-set
  labels:
    release: daemon-set
    chart: daemon-set-1.0.0
    app: daemon-set
spec:
  selector:
    matchLabels:
      app: daemon-set

---

#
# Following illustrates Ingress and endpoints networking.
#

kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: ingress
  namespace: networking
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                name: service-1
    - http:
        paths:
          - backend:
              service:
                name: service-2
    - http:
        paths:
          - backend:
              service:
                name: service-3
  ingressClassName: ingress-class

---

kind: Service
apiVersion: v1
metadata:
  name : service-1
  namespace: networking
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    pod: pod-1

---

kind: Endpoints
apiVersion: v1
metadata:
  name: service-1
  namespace: networking
subsets:
  - addresses:
      - targetRef:
          name: pod-1
          namespace: networking
          kind: Pod

---

kind: Pod
apiVersion: v1
metadata:
  name: pod-1
  namespace: networking
  labels:
    pod: pod-1
  annotations:
    k8s.v1.cni.cncf.io/networks: '[ { "name": "network" } ]'
spec:
  nodeName: minikube

---

kind: Service
apiVersion: v1
metadata:
  name : service-2
  namespace: networking
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    pod: pod-2

---

kind: Pod
apiVersion: v1
metadata:
  name: pod-2
  namespace: networking
  labels:
    pod: pod-2
  annotations:
    k8s.v1.cni.cncf.io/networks: '[ { "name": "network" } ]'
spec:
  nodeName: minikube-1

---

kind: Service
apiVersion: v1
metadata:
  name : service-3
  namespace: networking
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    pod: pod-3

---

kind: EndpointSlice
apiVersion: discovery.k8s.io/v1
metadata:
  name: endpoint-slice
  namespace: networking
  labels:
    kubernetes.io/service-name: service-3
endpoints:
  - targetRef:
      name: pod-3
      namespace: networking
      kind: Pod

---

kind: Pod
apiVersion: v1
metadata:
  name: pod-3
  namespace: networking
  labels:
    pod: pod-3
  annotations:
    k8s.v1.cni.cncf.io/networks: '[ { "name": "network" } ]'
spec:
  nodeName: minikube-2

---

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: network-policy
  namespace: networking
spec:
  podSelector:
    matchLabels:
      pod: pod-2
  ingress:
    - from:
        - podSelector:
            matchLabels:
              pod: pod-1
      ports:
        - port: 80
          protocol: TCP
  egress:
    - to:
        - podSelector:
            matchLabels:
              pod: pod-3
      ports:
        - port: 80
          protocol: TCP

---

kind: NetworkAttachmentDefinition
apiVersion: k8s.cni.cncf.io/v1
metadata:
  name: network
  namespace: networking

---

#
# TODO
#

kind: PodTemplate
apiVersion: v1
metadata:
  name: pod-template
  namespace: default
#TODO
    # edges: |
    #   edges.add_owned_resources()

---

kind: ReplicationController
apiVersion: v1
metadata:
  name: replication-controller
  namespace: default
#TODO
    # edges: |
    #   edges.add_owned_resources()
